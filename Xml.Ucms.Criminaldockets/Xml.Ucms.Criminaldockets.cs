//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.633.0 using the following command:
// xscgen UCE-UCMSCriminalDockets.xsd --compactTypeNames --netCore --uniqueTypeNames --pascal --nullable
namespace Xml.Ucms.Criminaldockets
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>This represents a treatment condition imposed on sentence items and some other items.</para>
    /// </summary>
    [DescriptionAttribute("This represents a treatment condition imposed on sentence items and some other it" +
        "ems.")]
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("TreatmentMandateCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class TreatmentMandateCondition
    {
        
        /// <summary>
        /// <para>This is the type of treatment program mandated for the condition. This comes from the TreatmentProgramTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of treatment program mandated for the condition. This comes from" +
            " the TreatmentProgramTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("TreatmentProgramType")]
        public String TreatmentProgramType { get; set; }
        
        /// <summary>
        /// <para>This is the length of time the treatment must occur.</para>
        /// </summary>
        [DescriptionAttribute("This is the length of time the treatment must occur.")]
        [XmlElementAttribute("MandateDuration")]
        public String MandateDuration { get; set; }
        
        /// <summary>
        /// <para>This is the unit used for the treatment duration, such as years, months, days, and hours. This comes from the DurationUnits dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the unit used for the treatment duration, such as years, months, days, an" +
            "d hours. This comes from the DurationUnits dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("MandateDurationUnit")]
        public String MandateDurationUnit { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("IsEvaluated")]
        public Boolean IsEvaluated { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("WeekendWorkProgramCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class WeekendWorkProgramCondition
    {
        
        /// <summary>
        /// <para>This is the period of time the weekend work program will be in effect.</para>
        /// </summary>
        [DescriptionAttribute("This is the period of time the weekend work program will be in effect.")]
        [RequiredAttribute()]
        [XmlElementAttribute("WeekendWorkDuration")]
        public String WeekendWorkDuration { get; set; }
        
        /// <summary>
        /// <para>This is the unit used for the weekend work program duration, such as years, months, days, and hours. This comes from the DurationUnits dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the unit used for the weekend work program duration, such as years, month" +
            "s, days, and hours. This comes from the DurationUnits dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("WeekendWorkDurationUnit")]
        public String WeekendWorkDurationUnit { get; set; }
        
        /// <summary>
        /// <para>This is the name of the agency the work must be reported to, if any.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the name of the agency the work must be reported to, if any.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ReportToAgencyName")]
        public String ReportToAgencyName { get; set; }
        
        /// <summary>
        /// <para>This is the date the weekend work program begins.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the weekend work program begins.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StartDate", DataType="date")]
        public DateTime StartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StartDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the weekend work program begins.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> StartDate
        {
            get
            {
                if (this.StartDateValueSpecified)
                {
                    return this.StartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StartDateValue = value.GetValueOrDefault();
                this.StartDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the date the weekend work program ends.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the weekend work program ends.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EndDate", DataType="date")]
        public DateTime EndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EndDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the weekend work program ends.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> EndDate
        {
            get
            {
                if (this.EndDateValueSpecified)
                {
                    return this.EndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EndDateValue = value.GetValueOrDefault();
                this.EndDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para>This represents a restitution condition imposed on sentence items and some other items.</para>
    /// </summary>
    [DescriptionAttribute("This represents a restitution condition imposed on sentence items and some other " +
        "items.")]
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("Restitution", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class Restitution
    {
        
        /// <summary>
        /// <para>This is the amount due for restitution.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount due for restitution.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Amount")]
        public Decimal AmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount due for restitution.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> Amount
        {
            get
            {
                if (this.AmountValueSpecified)
                {
                    return this.AmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmountValue = value.GetValueOrDefault();
                this.AmountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the date the restitution amount should be paid by.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the restitution amount should be paid by.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDate", DataType="date")]
        public DateTime DueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the restitution amount should be paid by.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> DueDate
        {
            get
            {
                if (this.DueDateValueSpecified)
                {
                    return this.DueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateValue = value.GetValueOrDefault();
                this.DueDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If true, this indicates that the restitution amount was paid prior to sentencing.</para>
        /// </summary>
        [DescriptionAttribute("If true, this indicates that the restitution amount was paid prior to sentencing." +
            "")]
        [RequiredAttribute()]
        [XmlElementAttribute("WasPaidPriorToBeingSent")]
        public Boolean WasPaidPriorToBeingSent { get; set; }
        
        /// <summary>
        /// <para>If true, indicates there was a separate restitution order provided to the court.</para>
        /// </summary>
        [DescriptionAttribute("If true, indicates there was a separate restitution order provided to the court.")]
        [RequiredAttribute()]
        [XmlElementAttribute("WasOrderAttached")]
        public Boolean WasOrderAttached { get; set; }
        
        /// <summary>
        /// <para>This has comments (if any) entered by the court staff about this restitution.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This has comments (if any) entered by the court staff about this restitution.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Comments")]
        public String Comments { get; set; }
    }
    
    /// <summary>
    /// <para>This represents an (ignition interlock device) IID condition imposed on sentence items and some other items.</para>
    /// </summary>
    [DescriptionAttribute("This represents an (ignition interlock device) IID condition imposed on sentence " +
        "items and some other items.")]
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("IIDCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class IIDCondition
    {
        
        /// <summary>
        /// <para>This is the number of years the IID must be installed.</para>
        /// </summary>
        [DescriptionAttribute("This is the number of years the IID must be installed.")]
        [XmlElementAttribute("IIDConditionDurationYears")]
        public String IIDConditionDurationYears { get; set; }
        
        /// <summary>
        /// <para>This is the number of months the IID must be installed.</para>
        /// </summary>
        [DescriptionAttribute("This is the number of months the IID must be installed.")]
        [XmlElementAttribute("IIDConditionDurationMonths")]
        public String IIDConditionDurationMonths { get; set; }
        
        /// <summary>
        /// <para>This is the number of days the IID must be installed.</para>
        /// </summary>
        [DescriptionAttribute("This is the number of days the IID must be installed.")]
        [XmlElementAttribute("IIDConditionDurationDays")]
        public String IIDConditionDurationDays { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("IsNotOrdered")]
        public Boolean IsNotOrdered { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("PaymentPlanComment")]
        public String PaymentPlanComment { get; set; }
    }
    
    /// <summary>
    /// <para>This represents a community service condition imposed on  sentence items and some other items.</para>
    /// </summary>
    [DescriptionAttribute("This represents a community service condition imposed on sentence items and some " +
        "other items.")]
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CommunityServiceCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CommunityServiceCondition
    {
        
        /// <summary>
        /// <para>This is the period of time the community service must be served.</para>
        /// </summary>
        [DescriptionAttribute("This is the period of time the community service must be served.")]
        [RequiredAttribute()]
        [XmlElementAttribute("CommunityServiceDuration")]
        public String CommunityServiceDuration { get; set; }
        
        /// <summary>
        /// <para>This is the unit used for the community service duration, such as years, months, days, and hours. This comes from the DurationUnits dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the unit used for the community service duration, such as years, months, " +
            "days, and hours. This comes from the DurationUnits dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("CommunityServiceDurationUnit")]
        public String CommunityServiceDurationUnit { get; set; }
        
        /// <summary>
        /// <para>This is the date the community service must be completed by.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the community service must be completed by.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CompleteByDate", DataType="date")]
        public DateTime CompleteByDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompleteByDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CompleteByDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the community service must be completed by.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> CompleteByDate
        {
            get
            {
                if (this.CompleteByDateValueSpecified)
                {
                    return this.CompleteByDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CompleteByDateValue = value.GetValueOrDefault();
                this.CompleteByDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the name of the agency that the defendant must report 
        ///to.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the name of the agency that the defendant must report to.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ReportToAgencyName")]
        public String ReportToAgencyName { get; set; }
    }
    
    /// <summary>
    /// <para>This represents a physical address of an entity such as a residence or
    ///                organization.</para>
    /// </summary>
    [DescriptionAttribute("This represents a physical address of an entity such as a residence or organizati" +
        "on.")]
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("Address", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class Address
    {
        
        /// <summary>
        /// <para>This indicates the type of address, such as "work", "home", etc ... This comes from the list of possible values in the AddressTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This indicates the type of address, such as \"work\", \"home\", etc ... This comes fr" +
            "om the list of possible values in the AddressTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("AddressType")]
        public String AddressType { get; set; }
        
        /// <summary>
        /// <para>This is the street1 portion of the address.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the street1 portion of the address.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Street1")]
        public String Street1 { get; set; }
        
        /// <summary>
        /// <para>This is the street2 portion of the address, if
        ///                        any.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the street2 portion of the address, if any.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Street2")]
        public String Street2 { get; set; }
        
        /// <summary>
        /// <para>This is the city portion of the address.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the city portion of the address.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("City")]
        public String City { get; set; }
        
        /// <summary>
        /// <para>This is the state portion of the address. This comes from the list of possible values in the USStates dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the state portion of the address. This comes from the list of possible va" +
            "lues in the USStates dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("State")]
        public String State { get; set; }
        
        /// <summary>
        /// <para>This is the zip or postal code portion of the address, if
        ///                        available.</para>
        /// <para>This is a string that cannot exceed 64 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [DescriptionAttribute("This is the zip or postal code portion of the address, if available.")]
        [MaxLengthAttribute(64)]
        [XmlElementAttribute("ZipPostalCode")]
        public String ZipPostalCode { get; set; }
        
        /// <summary>
        /// <para>This is the nation for the address. This comes from the list of possible values in the Nations dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the nation for the address. This comes from the list of possible values i" +
            "n the Nations dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Nation")]
        public String Nation { get; set; }
        
        /// <summary>
        /// <para>Indicates whether or not the address should be treated as confidential.</para>
        /// </summary>
        [DescriptionAttribute("Indicates whether or not the address should be treated as confidential.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsConfidential")]
        public Boolean IsConfidential { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 64 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [MaxLengthAttribute(64)]
        [XmlElementAttribute("Room")]
        public String Room { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 64 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [MaxLengthAttribute(64)]
        [XmlElementAttribute("Floor")]
        public String Floor { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 64 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [MaxLengthAttribute(64)]
        [XmlElementAttribute("Apartment")]
        public String Apartment { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Building")]
        public String Building { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("MailCareOf")]
        public String MailCareOf { get; set; }
    }
    
    /// <summary>
    /// <para>This type is used whenever a person or organization name is needed. Whenever a person's name is needed, the Prefix, First, Middle, Last, and Suffix fields may include the constituent parts of the name, as well as fully formatted names in NameFirstLast and NameLastFirst. Whenever an organization's name is needed, only the OrganizationName element will contain data.</para>
    /// </summary>
    [DescriptionAttribute(@"This type is used whenever a person or organization name is needed. Whenever a person's name is needed, the Prefix, First, Middle, Last, and Suffix fields may include the constituent parts of the name, as well as fully formatted names in NameFirstLast and NameLastFirst. Whenever an organization's name is needed, only the OrganizationName element will contain data.")]
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FullName", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FullName
    {
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Prefix")]
        public String Prefix { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("First")]
        public String First { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Middle")]
        public String Middle { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Last")]
        public String Last { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Suffix")]
        public String Suffix { get; set; }
        
        /// <summary>
        /// <para>This is the person's fully formatted name with the prefix first, for example, "Hon. Isabelle Smith".</para>
        /// <para>This is a string that cannot exceed 1024 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 1024.</para>
        /// </summary>
        [DescriptionAttribute("This is the person\'s fully formatted name with the prefix first, for example, \"Ho" +
            "n. Isabelle Smith\".")]
        [MaxLengthAttribute(1024)]
        [XmlElementAttribute("NameFirstLast")]
        public String NameFirstLast { get; set; }
        
        /// <summary>
        /// <para>This is the person's fully formatted name with the last name first, for example, "Smith, Hon. Vishnu".</para>
        /// <para>This is a string that cannot exceed 1024 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 1024.</para>
        /// </summary>
        [DescriptionAttribute("This is the person\'s fully formatted name with the last name first, for example, " +
            "\"Smith, Hon. Vishnu\".")]
        [MaxLengthAttribute(1024)]
        [XmlElementAttribute("NameLastFirst")]
        public String NameLastFirst { get; set; }
        
        /// <summary>
        /// <para>This is used whenever the name is for an organization, for example, "Warren and Sons".</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is used whenever the name is for an organization, for example, \"Warren and S" +
            "ons\".")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("OrganizationName")]
        public String OrganizationName { get; set; }
        
        /// <summary>
        /// <para>If true, this name is for a person; otherwise, it is for an organization.  In the case of a CourtReporter, false will indicates that the court reporter was digital.</para>
        /// </summary>
        [DescriptionAttribute("If true, this name is for a person; otherwise, it is for an organization. In the " +
            "case of a CourtReporter, false will indicates that the court reporter was digita" +
            "l.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsPerson")]
        public Boolean IsPerson { get; set; }
    }
    
    /// <summary>
    /// <para>This is the root element for the UCMS Criminal Extract, which contains all of the extract's data.</para>
    /// </summary>
    [DescriptionAttribute("This is the root element for the UCMS Criminal Extract, which contains all of the" +
        " extract\'s data.")]
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDockets", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("CriminalDockets", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
    public partial class CriminalDockets
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrict> _district;
        
        [XmlElementAttribute("District")]
        public Collection<CriminalDocketsDistrict> District
        {
            get
            {
                return this._district;
            }
            private set
            {
                this._district = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the District collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean DistrictSpecified
        {
            get
            {
                return (this.District.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDockets" /> class.</para>
        /// </summary>
        public CriminalDockets()
        {
            this._district = new Collection<CriminalDocketsDistrict>();
        }
        
        /// <summary>
        /// <para>This is the date and time this extract was generated.</para>
        /// </summary>
        [DescriptionAttribute("This is the date and time this extract was generated.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlAttributeAttribute("GeneratedDateTime", DataType="dateTime")]
        public DateTime GeneratedDateTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GeneratedDateTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GeneratedDateTimeValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date and time this extract was generated.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> GeneratedDateTime
        {
            get
            {
                if (this.GeneratedDateTimeValueSpecified)
                {
                    return this.GeneratedDateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GeneratedDateTimeValue = value.GetValueOrDefault();
                this.GeneratedDateTimeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This indicates the total number of dockets found in this particular extract.</para>
        /// </summary>
        [DescriptionAttribute("This indicates the total number of dockets found in this particular extract.")]
        [XmlAttributeAttribute("DocketCount")]
        public String DocketCount { get; set; }
        
        /// <summary>
        /// <para>This indicates the total number of deleted dockets found in this particular extract.</para>
        /// </summary>
        [DescriptionAttribute("This indicates the total number of deleted dockets found in this particular extra" +
            "ct.")]
        [XmlAttributeAttribute("DocketDeletedCount")]
        public String DocketDeletedCount { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrict", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrict
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCounty> _county;
        
        /// <summary>
        /// <para>This is the list of all counties included in the extract. Each county may contain a local or superior criminal court.</para>
        /// </summary>
        [DescriptionAttribute("This is the list of all counties included in the extract. Each county may contain" +
            " a local or superior criminal court.")]
        [RequiredAttribute()]
        [XmlElementAttribute("County")]
        public Collection<CriminalDocketsDistrictCounty> County
        {
            get
            {
                return this._county;
            }
            private set
            {
                this._county = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrict" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrict()
        {
            this._county = new Collection<CriminalDocketsDistrictCounty>();
        }
        
        /// <summary>
        /// <para>This references the ID of the district in the districts dictionary.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This references the ID of the district in the districts dictionary.")]
        [MaxLengthAttribute(32)]
        [XmlAttributeAttribute("DistrictIDReference")]
        public String DistrictIDReference { get; set; }
        
        /// <summary>
        /// <para>This is the district number.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the district number.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("Name")]
        public String Name { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCounty", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCounty
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourt> _court;
        
        /// <summary>
        /// <para>This represents a specific local or superior criminal court.</para>
        /// </summary>
        [DescriptionAttribute("This represents a specific local or superior criminal court.")]
        [XmlElementAttribute("Court")]
        public Collection<CriminalDocketsDistrictCountyCourt> Court
        {
            get
            {
                return this._court;
            }
            private set
            {
                this._court = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Court collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean CourtSpecified
        {
            get
            {
                return (this.Court.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCounty" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCounty()
        {
            this._court = new Collection<CriminalDocketsDistrictCountyCourt>();
        }
        
        /// <summary>
        /// <para>This references the id of a county in the county dictionary.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This references the id of a county in the county dictionary.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("CountyIDReference")]
        public String CountyIDReference { get; set; }
        
        /// <summary>
        /// <para>This is the full name of the county.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the full name of the county.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("Name")]
        public String Name { get; set; }
        
        /// <summary>
        /// <para>This is the standardized code assigned to each of the 62 counties.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the standardized code assigned to each of the 62 counties.")]
        [MaxLengthAttribute(32)]
        [XmlAttributeAttribute("CountyCode")]
        public String CountyCode { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourt", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourt
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocket> _docket;
        
        /// <summary>
        /// <para>This represents a docket in the UCMS Criminal application.</para>
        /// </summary>
        [DescriptionAttribute("This represents a docket in the UCMS Criminal application.")]
        [XmlElementAttribute("Docket")]
        public Collection<CriminalDocketsDistrictCountyCourtDocket> Docket
        {
            get
            {
                return this._docket;
            }
            private set
            {
                this._docket = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Docket collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean DocketSpecified
        {
            get
            {
                return (this.Docket.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourt" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourt()
        {
            this._docket = new Collection<CriminalDocketsDistrictCountyCourtDocket>();
            this._deletedDocket = new Collection<CriminalDocketsDistrictCountyCourtDeletedDocket>();
            this._deletedWarrant = new Collection<CriminalDocketsDistrictCountyCourtDeletedWarrant>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDeletedDocket> _deletedDocket;
        
        /// <summary>
        /// <para>If a docket appeared in this extract at least once, and then the docket was deleted, it will show up in this list.</para>
        /// </summary>
        [DescriptionAttribute("If a docket appeared in this extract at least once, and then the docket was delet" +
            "ed, it will show up in this list.")]
        [XmlElementAttribute("DeletedDocket")]
        public Collection<CriminalDocketsDistrictCountyCourtDeletedDocket> DeletedDocket
        {
            get
            {
                return this._deletedDocket;
            }
            private set
            {
                this._deletedDocket = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DeletedDocket collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean DeletedDocketSpecified
        {
            get
            {
                return (this.DeletedDocket.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDeletedWarrant> _deletedWarrant;
        
        /// <summary>
        /// <para>In the event any warrant is deleted from the docket, its reference will be in this element.</para>
        /// </summary>
        [DescriptionAttribute("In the event any warrant is deleted from the docket, its reference will be in thi" +
            "s element.")]
        [XmlElementAttribute("DeletedWarrant")]
        public Collection<CriminalDocketsDistrictCountyCourtDeletedWarrant> DeletedWarrant
        {
            get
            {
                return this._deletedWarrant;
            }
            private set
            {
                this._deletedWarrant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DeletedWarrant collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean DeletedWarrantSpecified
        {
            get
            {
                return (this.DeletedWarrant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>This references the appropriate court in the court dictionary.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This references the appropriate court in the court dictionary.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("CourtIDReference")]
        public String CourtIDReference { get; set; }
        
        /// <summary>
        /// <para>This is the full name of the Court.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the full name of the Court.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("Name")]
        public String Name { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocket", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocket
    {
        
        /// <summary>
        /// <para>If true, this docket is a lower criminal docket. Otherwise, it's a superior criminal docket.</para>
        /// </summary>
        [DescriptionAttribute("If true, this docket is a lower criminal docket. Otherwise, it\'s a superior crimi" +
            "nal docket.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsLowerCriminalDocket")]
        public Boolean IsLowerCriminalDocket { get; set; }
        
        /// <summary>
        /// <para>This is the type of seal for the docket if it has one, or "Unsealed" if not. This comes from the SealTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of seal for the docket if it has one, or \"Unsealed\" if not. This" +
            " comes from the SealTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("SealType")]
        public String SealType { get; set; }
        
        /// <summary>
        /// <para>This is the date the docket was last sealed, if the docket is sealed.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the docket was last sealed, if the docket is sealed.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SealDate", DataType="date")]
        public DateTime SealDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SealDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SealDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the docket was last sealed, if the docket is sealed.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> SealDate
        {
            get
            {
                if (this.SealDateValueSpecified)
                {
                    return this.SealDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SealDateValue = value.GetValueOrDefault();
                this.SealDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This records the earliest arraignment date for any charge. There will be no value if no charges have been arraigned.</para>
        /// </summary>
        [DescriptionAttribute("This records the earliest arraignment date for any charge. There will be no value" +
            " if no charges have been arraigned.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ArraignmentDate", DataType="date")]
        public DateTime ArraignmentDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ArraignmentDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ArraignmentDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This records the earliest arraignment date for any charge. There will be no value if no charges have been arraigned.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> ArraignmentDate
        {
            get
            {
                if (this.ArraignmentDateValueSpecified)
                {
                    return this.ArraignmentDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ArraignmentDateValue = value.GetValueOrDefault();
                this.ArraignmentDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is a reference to the current judge assigned to the docket, if any.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the current judge assigned to the docket, if any.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("JudgeAssignedReference")]
        public String JudgeAssignedReference { get; set; }
        
        /// <summary>
        /// <para>The docket number assigned to the docket. The docket number must be unique in the context of the court. The same docket number may be repeated across different courts.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("The docket number assigned to the docket. The docket number must be unique in the" +
            " context of the court. The same docket number may be repeated across different c" +
            "ourts.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("DocketNumber")]
        public String DocketNumber { get; set; }
        
        /// <summary>
        /// <para>This is the type of docket, such as Criminal, Parking, etc ... The value comes from the CaseTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of docket, such as Criminal, Parking, etc ... The value comes fr" +
            "om the CaseTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("CaseType")]
        public String CaseType { get; set; }
        
        /// <summary>
        /// <para>This is the date the docket was filed, if known.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the docket was filed, if known.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FiledDate", DataType="date")]
        public DateTime FiledDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiledDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FiledDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the docket was filed, if known.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> FiledDate
        {
            get
            {
                if (this.FiledDateValueSpecified)
                {
                    return this.FiledDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FiledDateValue = value.GetValueOrDefault();
                this.FiledDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the total balance to pay. This balance includes all fees/surcharges related to the active/current sentence as well as the Termination of License suspension which is at the charge level.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the total balance to pay. This balance includes all fees/surcharges relat" +
            "ed to the active/current sentence as well as the Termination of License suspensi" +
            "on which is at the charge level.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DocketBalance")]
        public Decimal DocketBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DocketBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DocketBalanceValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the total balance to pay. This balance includes all fees/surcharges related to the active/current sentence as well as the Termination of License suspension which is at the charge level.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> DocketBalance
        {
            get
            {
                if (this.DocketBalanceValueSpecified)
                {
                    return this.DocketBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DocketBalanceValue = value.GetValueOrDefault();
                this.DocketBalanceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If True, this docket has an open warrant.  Please refer to the Warrant element for more detailed information.</para>
        /// </summary>
        [DescriptionAttribute("If True, this docket has an open warrant. Please refer to the Warrant element for" +
            " more detailed information.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsWarranted")]
        public Boolean IsWarranted { get; set; }
        
        /// <summary>
        /// <para>This is the primary party on the docket. Each docket has one and only one primary party. There can be only one.</para>
        /// </summary>
        [DescriptionAttribute("This is the primary party on the docket. Each docket has one and only one primary" +
            " party. There can be only one.")]
        [RequiredAttribute()]
        [XmlElementAttribute("PrimaryParty")]
        public CriminalDocketsDistrictCountyCourtDocketPrimaryParty PrimaryParty { get; set; }
        
        /// <summary>
        /// <para>This is the superior court case number, in the format of SEQUENCE-YEAR. All superior criminal dockets are part of a case. No lower criminal dockets are part of a case.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the superior court case number, in the format of SEQUENCE-YEAR. All super" +
            "ior criminal dockets are part of a case. No lower criminal dockets are part of a" +
            " case.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("SuperiorCourtCaseNumber")]
        public String SuperiorCourtCaseNumber { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketDocketLegacyNumber> _docketLegacyNumber;
        
        /// <summary>
        /// <para>This contains any legacy that have been assigned to a docket. A docket might have multiple legacy docket numbers.</para>
        /// </summary>
        [DescriptionAttribute("This contains any legacy that have been assigned to a docket. A docket might have" +
            " multiple legacy docket numbers.")]
        [XmlElementAttribute("DocketLegacyNumber")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketDocketLegacyNumber> DocketLegacyNumber
        {
            get
            {
                return this._docketLegacyNumber;
            }
            private set
            {
                this._docketLegacyNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocketLegacyNumber collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean DocketLegacyNumberSpecified
        {
            get
            {
                return (this.DocketLegacyNumber.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocket" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocket()
        {
            this._docketLegacyNumber = new Collection<CriminalDocketsDistrictCountyCourtDocketDocketLegacyNumber>();
            this._codefendant = new Collection<CriminalDocketsDistrictCountyCourtDocketCodefendant>();
            this._attorney = new Collection<CriminalDocketsDistrictCountyCourtDocketAttorney>();
            this._appearance = new Collection<CriminalDocketsDistrictCountyCourtDocketAppearance>();
            this._motion = new Collection<CriminalDocketsDistrictCountyCourtDocketMotion>();
            this._charge = new Collection<CriminalDocketsDistrictCountyCourtDocketCharge>();
            this._warrant = new Collection<CriminalDocketsDistrictCountyCourtDocketWarrant>();
            this._orderOfProtection = new Collection<CriminalDocketsDistrictCountyCourtDocketOrderOfProtection>();
            this._docketOrigin = new Collection<CriminalDocketsDistrictCountyCourtDocketDocketOrigin>();
        }
        
        /// <summary>
        /// <para>This is the case number assigned by a district attorney to a docket (or case) within a superior court. This number is not required to be unique per docket, and depending on the district, can be issued on a per docket or per superior court case basis.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the case number assigned by a district attorney to a docket (or case) wit" +
            "hin a superior court. This number is not required to be unique per docket, and d" +
            "epending on the district, can be issued on a per docket or per superior court ca" +
            "se basis.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("DACaseNumber")]
        public String DACaseNumber { get; set; }
        
        /// <summary>
        /// <para>This is the number assigned by the county clerk when a case is filed with them. Operationally this can either happen at filing or at disposition. There is no regular statewide format for this identifier, and each county may have its own.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the number assigned by the county clerk when a case is filed with them. O" +
            "perationally this can either happen at filing or at disposition. There is no reg" +
            "ular statewide format for this identifier, and each county may have its own.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("IndexNumber")]
        public String IndexNumber { get; set; }
        
        /// <summary>
        /// <para>If true, this case was directly presented to a grand jury, which means that it did not originate from another docket, but originated directly from the grand jury.</para>
        /// </summary>
        [DescriptionAttribute("If true, this case was directly presented to a grand jury, which means that it di" +
            "d not originate from another docket, but originated directly from the grand jury" +
            ".")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsDirectPresentation")]
        public Boolean IsDirectPresentation { get; set; }
        
        /// <summary>
        /// <para>If True, this docket was arraigned as a domestic violence (DV) case.</para>
        /// </summary>
        [DescriptionAttribute("If True, this docket was arraigned as a domestic violence (DV) case.")]
        [RequiredAttribute()]
        [XmlElementAttribute("DomesticViolenceIndicator")]
        public Boolean DomesticViolenceIndicator { get; set; }
        
        /// <summary>
        /// <para>If True, this docket has a desk appearance ticket (DAT).</para>
        /// </summary>
        [DescriptionAttribute("If True, this docket has a desk appearance ticket (DAT).")]
        [RequiredAttribute()]
        [XmlElementAttribute("DeskAppearanceTicketIndicator")]
        public Boolean DeskAppearanceTicketIndicator { get; set; }
        
        /// <summary>
        /// <para>If True, the arrest for this docket has a domestic incident report (DIR) filed.</para>
        /// </summary>
        [DescriptionAttribute("If True, the arrest for this docket has a domestic incident report (DIR) filed.")]
        [RequiredAttribute()]
        [XmlElementAttribute("DomesticIncidentReportIndicator")]
        public Boolean DomesticIncidentReportIndicator { get; set; }
        
        /// <summary>
        /// <para>This is the identifiers information from the previous system.</para>
        /// </summary>
        [DescriptionAttribute("This is the identifiers information from the previous system.")]
        [XmlElementAttribute("CRIMSIdentifiers")]
        public CriminalDocketsDistrictCountyCourtDocketCRIMSIdentifiers CRIMSIdentifiers { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketCodefendant> _codefendant;
        
        /// <summary>
        /// <para>This is a codefendant on the docket.</para>
        /// </summary>
        [DescriptionAttribute("This is a codefendant on the docket.")]
        [XmlElementAttribute("Codefendant")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketCodefendant> Codefendant
        {
            get
            {
                return this._codefendant;
            }
            private set
            {
                this._codefendant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Codefendant collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean CodefendantSpecified
        {
            get
            {
                return (this.Codefendant.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketAttorney> _attorney;
        
        /// <summary>
        /// <para>This represents an attorney for a party in UCMS.</para>
        /// </summary>
        [DescriptionAttribute("This represents an attorney for a party in UCMS.")]
        [XmlElementAttribute("Attorney")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketAttorney> Attorney
        {
            get
            {
                return this._attorney;
            }
            private set
            {
                this._attorney = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Attorney collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean AttorneySpecified
        {
            get
            {
                return (this.Attorney.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketAppearance> _appearance;
        
        /// <summary>
        /// <para>This is a docket appearance. All appearances are held by a court.</para>
        /// </summary>
        [DescriptionAttribute("This is a docket appearance. All appearances are held by a court.")]
        [XmlElementAttribute("Appearance")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketAppearance> Appearance
        {
            get
            {
                return this._appearance;
            }
            private set
            {
                this._appearance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Appearance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean AppearanceSpecified
        {
            get
            {
                return (this.Appearance.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketMotion> _motion;
        
        /// <summary>
        /// <para>This contains all relevant information about motions on a docket.</para>
        /// </summary>
        [DescriptionAttribute("This contains all relevant information about motions on a docket.")]
        [XmlElementAttribute("Motion")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketMotion> Motion
        {
            get
            {
                return this._motion;
            }
            private set
            {
                this._motion = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Motion collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean MotionSpecified
        {
            get
            {
                return (this.Motion.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketCharge> _charge;
        
        /// <summary>
        /// <para>This contains all relevant information about a charge on the docket.</para>
        /// </summary>
        [DescriptionAttribute("This contains all relevant information about a charge on the docket.")]
        [XmlElementAttribute("Charge")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketCharge> Charge
        {
            get
            {
                return this._charge;
            }
            private set
            {
                this._charge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Charge collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean ChargeSpecified
        {
            get
            {
                return (this.Charge.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>If the docket is disposed, this element contains information about the disposition.</para>
        /// </summary>
        [DescriptionAttribute("If the docket is disposed, this element contains information about the dispositio" +
            "n.")]
        [XmlElementAttribute("DocketDisposition")]
        public CriminalDocketsDistrictCountyCourtDocketDocketDisposition DocketDisposition { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketWarrant> _warrant;
        
        /// <summary>
        /// <para>This has information about warrants issued for the defendant on the docket. Multiple warrants can be issued on the same docket.</para>
        /// </summary>
        [DescriptionAttribute("This has information about warrants issued for the defendant on the docket. Multi" +
            "ple warrants can be issued on the same docket.")]
        [XmlElementAttribute("Warrant")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketWarrant> Warrant
        {
            get
            {
                return this._warrant;
            }
            private set
            {
                this._warrant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Warrant collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean WarrantSpecified
        {
            get
            {
                return (this.Warrant.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketOrderOfProtection> _orderOfProtection;
        
        /// <summary>
        /// <para>This contains all relevant information about an order of protection on the docket.</para>
        /// </summary>
        [DescriptionAttribute("This contains all relevant information about an order of protection on the docket" +
            ".")]
        [XmlElementAttribute("OrderOfProtection")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketOrderOfProtection> OrderOfProtection
        {
            get
            {
                return this._orderOfProtection;
            }
            private set
            {
                this._orderOfProtection = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OrderOfProtection collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean OrderOfProtectionSpecified
        {
            get
            {
                return (this.OrderOfProtection.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>This contains a history of bail activity as well as bail summary information.</para>
        /// </summary>
        [DescriptionAttribute("This contains a history of bail activity as well as bail summary information.")]
        [XmlElementAttribute("Bail")]
        public CriminalDocketsDistrictCountyCourtDocketBail Bail { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketDocketOrigin> _docketOrigin;
        
        /// <summary>
        /// <para>All superior criminal dockets except for direct presentations have an origin, meaning they originate from a UCMS or non-UCMS docket. This element contains such origin information. Direct presentations in superior criminal, and all lower criminal dockets, do not have an origin.</para>
        /// </summary>
        [DescriptionAttribute(@"All superior criminal dockets except for direct presentations have an origin, meaning they originate from a UCMS or non-UCMS docket. This element contains such origin information. Direct presentations in superior criminal, and all lower criminal dockets, do not have an origin.")]
        [XmlElementAttribute("DocketOrigin")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketDocketOrigin> DocketOrigin
        {
            get
            {
                return this._docketOrigin;
            }
            private set
            {
                this._docketOrigin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocketOrigin collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean DocketOriginSpecified
        {
            get
            {
                return (this.DocketOrigin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each docket, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same docket retains the same identifier each time it appears in an extract. This identifier is of the form "Docket-Sequence". It should be noted that: 
        ///o Docket is literally "Docket". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "Docket-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each docket, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same docket retains the same identifier each time it appears in an extract. This identifier is of the form ""Docket-Sequence"". It should be noted that: o Docket is literally ""Docket"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""Docket-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("DocketID")]
        public String DocketID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketPrimaryParty", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketPrimaryParty
    {
        
        /// <summary>
        /// <para>This is the name of the party,
        ///                                                                            whether a person or an
        ///                                                                            organization.</para>
        /// </summary>
        [DescriptionAttribute("This is the name of the party, whether a person or an organization.")]
        [RequiredAttribute()]
        [XmlElementAttribute("PrimaryPartyName")]
        public FullName PrimaryPartyName { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<FullName> _primaryPartyAKAName;
        
        /// <summary>
        /// <para>The party may have one or more aliases or "also known as" names.</para>
        /// </summary>
        [DescriptionAttribute("The party may have one or more aliases or \"also known as\" names.")]
        [XmlElementAttribute("PrimaryPartyAKAName")]
        public Collection<FullName> PrimaryPartyAKAName
        {
            get
            {
                return this._primaryPartyAKAName;
            }
            private set
            {
                this._primaryPartyAKAName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrimaryPartyAKAName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean PrimaryPartyAKANameSpecified
        {
            get
            {
                return (this.PrimaryPartyAKAName.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketPrimaryParty" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketPrimaryParty()
        {
            this._primaryPartyAKAName = new Collection<FullName>();
        }
        
        /// <summary>
        /// <para>This is the date the person entered this world.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the person entered this world.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DateOfBirth", DataType="date")]
        public DateTime DateOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DateOfBirthValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the person entered this world.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> DateOfBirth
        {
            get
            {
                if (this.DateOfBirthValueSpecified)
                {
                    return this.DateOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateOfBirthValue = value.GetValueOrDefault();
                this.DateOfBirthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the gender of the primary party. This comes from the list of possible values in the Genders dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the gender of the primary party. This comes from the list of possible val" +
            "ues in the Genders dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Gender")]
        public String Gender { get; set; }
        
        /// <summary>
        /// <para>This is the ethnicity of the primary party. This comes from the list of possible values in the Ethnicities dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the ethnicity of the primary party. This comes from the list of possible " +
            "values in the Ethnicities dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Ethnicity")]
        public String Ethnicity { get; set; }
        
        /// <summary>
        /// <para>The primary language of the party, if other than English and if known. This comes from the list of possible values in the Languages dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("The primary language of the party, if other than English and if known. This comes" +
            " from the list of possible values in the Languages dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("PrimaryLanguage")]
        public String PrimaryLanguage { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("NYSID")]
        public String NYSID { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("InmateNumber")]
        public String InmateNumber { get; set; }
        
        [XmlElementAttribute("PrimaryPartyDriversLicense")]
        public CriminalDocketsDistrictCountyCourtDocketPrimaryPartyPrimaryPartyDriversLicense PrimaryPartyDriversLicense { get; set; }
        
        [XmlElementAttribute("PrimaryPartyLicensePlate")]
        public CriminalDocketsDistrictCountyCourtDocketPrimaryPartyPrimaryPartyLicensePlate PrimaryPartyLicensePlate { get; set; }
        
        /// <summary>
        /// <para>This is the primary address of the primary party.</para>
        /// </summary>
        [DescriptionAttribute("This is the primary address of the primary party.")]
        [XmlElementAttribute("PrimaryPartyAddress")]
        public Address PrimaryPartyAddress { get; set; }
        
        /// <summary>
        /// <para>This is the race of the primary party. This comes from the list of possible values in the Races dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the race of the primary party. This comes from the list of possible value" +
            "s in the Races dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Race")]
        public String Race { get; set; }
        
        /// <summary>
        /// <para>This is the eye color of the primary party. This comes from the list of possible values in the EyeColors dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the eye color of the primary party. This comes from the list of possible " +
            "values in the EyeColors dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("EyeColor")]
        public String EyeColor { get; set; }
        
        /// <summary>
        /// <para>This is the hair color of the party. This comes from the list of possible values in the HairColors dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the hair color of the party. This comes from the list of possible values " +
            "in the HairColors dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("HairColor")]
        public String HairColor { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 64 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [MaxLengthAttribute(64)]
        [XmlElementAttribute("Weight")]
        public String Weight { get; set; }
        
        /// <summary>
        /// <para>This is a string that cannot exceed 64 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [MaxLengthAttribute(64)]
        [XmlElementAttribute("Height")]
        public String Height { get; set; }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each primary party, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same party retains the same identifier each time it appears in an extract. This identifier is of the form "PrimaryParty-Sequence". It should be noted that: 
        ///o PrimaryParty is literally "PrimaryParty". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "PrimaryParty-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each primary party, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same party retains the same identifier each time it appears in an extract. This identifier is of the form ""PrimaryParty-Sequence"". It should be noted that: o PrimaryParty is literally ""PrimaryParty"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""PrimaryParty-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("PrimaryPartyID")]
        public String PrimaryPartyID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketPrimaryPartyPrimaryPartyDriversLicense", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketPrimaryPartyPrimaryPartyDriversLicense
    {
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("DriversLicenseNumber")]
        public String DriversLicenseNumber { get; set; }
        
        /// <summary>
        /// <para>This is the state of origin for the driver's license. This comes from the list of possible values in the USStates dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the state of origin for the driver\'s license. This comes from the list of" +
            " possible values in the USStates dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("DriversLicenseState")]
        public String DriversLicenseState { get; set; }
        
        /// <summary>
        /// <para>This is the nation of origin for the driver's license. This comes from the list of possible values in the Nations dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the nation of origin for the driver\'s license. This comes from the list o" +
            "f possible values in the Nations dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Nation")]
        public String Nation { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketPrimaryPartyPrimaryPartyLicensePlate", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketPrimaryPartyPrimaryPartyLicensePlate
    {
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("LicensePlateNumber")]
        public String LicensePlateNumber { get; set; }
        
        /// <summary>
        /// <para>This is the state of origin for the license plate. This comes from the list of possible values in the USStates dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the state of origin for the license plate. This comes from the list of po" +
            "ssible values in the USStates dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("LicensePlateState")]
        public String LicensePlateState { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketDocketLegacyNumber", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketDocketLegacyNumber
    {
        
        /// <summary>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("LegacyNumber")]
        public String LegacyNumber { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketCRIMSIdentifiers", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketCRIMSIdentifiers
    {
        
        /// <summary>
        /// <para>This is the standardized code assigned to each of the 62 counties.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the standardized code assigned to each of the 62 counties.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("CountyCode")]
        public String CountyCode { get; set; }
        
        /// <summary>
        /// <para>This is the ID from the previous system. It is unique within county.</para>
        /// </summary>
        [DescriptionAttribute("This is the ID from the previous system. It is unique within county.")]
        [RequiredAttribute()]
        [XmlElementAttribute("CRIMSId")]
        public Decimal CRIMSId { get; set; }
        
        /// <summary>
        /// <para>This is the docket sequence number from the previous system.</para>
        /// </summary>
        [DescriptionAttribute("This is the docket sequence number from the previous system.")]
        [RequiredAttribute()]
        [XmlElementAttribute("DSeq")]
        public Decimal DSeq { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketCodefendant", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketCodefendant
    {
        
        /// <summary>
        /// <para>This is the name of the party,
        ///                                                                            whether a person or an
        ///                                                                            organization.</para>
        /// </summary>
        [DescriptionAttribute("This is the name of the party, whether a person or an organization.")]
        [RequiredAttribute()]
        [XmlElementAttribute("CodefendantName")]
        public FullName CodefendantName { get; set; }
        
        /// <summary>
        /// <para>This is the formatted docket number for the codefendant.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the formatted docket number for the codefendant.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("CodefendantDocketNumber")]
        public String CodefendantDocketNumber { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the primary party ID of the codefendant.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the primary party ID of the codefendant.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("PrimaryPartyReference")]
        public String PrimaryPartyReference { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketAttorney", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketAttorney
    {
        
        /// <summary>
        /// <para>This is the name of the Attorney, whether a person or organization.</para>
        /// </summary>
        [DescriptionAttribute("This is the name of the Attorney, whether a person or organization.")]
        [RequiredAttribute()]
        [XmlElementAttribute("AttorneyName")]
        public FullName AttorneyName { get; set; }
        
        /// <summary>
        /// <para>This is the primary address for the attorney on the case.</para>
        /// </summary>
        [DescriptionAttribute("This is the primary address for the attorney on the case.")]
        [RequiredAttribute()]
        [XmlElementAttribute("AttorneyAddress")]
        public Address AttorneyAddress { get; set; }
        
        /// <summary>
        /// <para>This is the business phone number information.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the business phone number information.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("MainPhone")]
        public String MainPhone { get; set; }
        
        /// <summary>
        /// <para>This is the type of representation that the attorney is providing on the docket (also known as attorney_type). This comes from the list of possible values in the Representations dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of representation that the attorney is providing on the docket (" +
            "also known as attorney_type). This comes from the list of possible values in the" +
            " Representations dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("Representation")]
        public String Representation { get; set; }
        
        /// <summary>
        /// <para>This is the date the attorney started representation.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the attorney started representation.")]
        [RequiredAttribute()]
        [XmlElementAttribute("AssignmentStartDate", DataType="date")]
        public DateTime AssignmentStartDate { get; set; }
        
        /// <summary>
        /// <para>This is the date the attorney ended representation for the docket. Attorneys still active on a docket will not have an end date.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the attorney ended representation for the docket. Attorneys stil" +
            "l active on a docket will not have an end date.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AssignmentEndDate", DataType="date")]
        public DateTime AssignmentEndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssignmentEndDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AssignmentEndDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the attorney ended representation for the docket. Attorneys still active on a docket will not have an end date.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> AssignmentEndDate
        {
            get
            {
                if (this.AssignmentEndDateValueSpecified)
                {
                    return this.AssignmentEndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AssignmentEndDateValue = value.GetValueOrDefault();
                this.AssignmentEndDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the New York State registration number for the attorney, if known.</para>
        /// <para>This is a string that cannot exceed 64 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [DescriptionAttribute("This is the New York State registration number for the attorney, if known.")]
        [MaxLengthAttribute(64)]
        [XmlElementAttribute("AttorneyRegistrationNumber")]
        public String AttorneyRegistrationNumber { get; set; }
        
        /// <summary>
        /// <para>This is the most recent email address information.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the most recent email address information.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Email")]
        public String Email { get; set; }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each attorney, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same attorney retains the same identifier each time it appears in an extract. This identifier is of the form "Attorney-Sequence". It should be noted that: 
        ///o Attorney is literally "Attorney". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "Attorney-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each attorney, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same attorney retains the same identifier each time it appears in an extract. This identifier is of the form ""Attorney-Sequence"". It should be noted that: o Attorney is literally ""Attorney"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""Attorney-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("AttorneyID")]
        public String AttorneyID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketAppearance", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketAppearance
    {
        
        /// <summary>
        /// <para>This is the name of the court in which the appearance is scheduled.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the name of the court in which the appearance is scheduled.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("CourtName")]
        public String CourtName { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the judge the appearance was scheduled to.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the judge the appearance was scheduled to.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("AppearanceJudgeReference")]
        public String AppearanceJudgeReference { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the part which the appearance is scheduled, if available.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the part which the appearance is scheduled, if available.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("AppearancePartReference")]
        public String AppearancePartReference { get; set; }
        
        /// <summary>
        /// <para>This is the name of the part in which the appearance is scheduled, if available.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the name of the part in which the appearance is scheduled, if available.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("PartName")]
        public String PartName { get; set; }
        
        /// <summary>
        /// <para>This is the date of the
        ///                                                                            appearance.</para>
        /// </summary>
        [DescriptionAttribute("This is the date of the appearance.")]
        [RequiredAttribute()]
        [XmlElementAttribute("AppearanceDate", DataType="date")]
        public DateTime AppearanceDate { get; set; }
        
        /// <summary>
        /// <para>This is the time of the
        ///                                                                            appearance, if given.</para>
        /// </summary>
        [DescriptionAttribute("This is the time of the appearance, if given.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AppearanceTime", DataType="time")]
        public DateTime AppearanceTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppearanceTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AppearanceTimeValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the time of the
        ///                                                                            appearance, if given.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> AppearanceTime
        {
            get
            {
                if (this.AppearanceTimeValueSpecified)
                {
                    return this.AppearanceTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AppearanceTimeValue = value.GetValueOrDefault();
                this.AppearanceTimeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is a reference to the court location for which the appearance is scheduled.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the court location for which the appearance is scheduled.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("CourtLocationReference")]
        public String CourtLocationReference { get; set; }
        
        /// <summary>
        /// <para>This is the type of the appearance. This comes from the AppearanceType dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of the appearance. This comes from the AppearanceType dictionary" +
            ".")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("AppearanceType")]
        public String AppearanceType { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearancePurpose> _appearancePurpose;
        
        /// <summary>
        /// <para>These are the purposes of the appearance. This comes from the AppearancePurpose dictionary.</para>
        /// </summary>
        [DescriptionAttribute("These are the purposes of the appearance. This comes from the AppearancePurpose d" +
            "ictionary.")]
        [XmlElementAttribute("AppearancePurpose")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearancePurpose> AppearancePurpose
        {
            get
            {
                return this._appearancePurpose;
            }
            private set
            {
                this._appearancePurpose = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AppearancePurpose collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean AppearancePurposeSpecified
        {
            get
            {
                return (this.AppearancePurpose.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketAppearance" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketAppearance()
        {
            this._appearancePurpose = new Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearancePurpose>();
            this._appearanceScheduledReason = new Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceScheduledReason>();
            this._appearanceOutcome = new Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceOutcome>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceScheduledReason> _appearanceScheduledReason;
        
        [XmlElementAttribute("AppearanceScheduledReason")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceScheduledReason> AppearanceScheduledReason
        {
            get
            {
                return this._appearanceScheduledReason;
            }
            private set
            {
                this._appearanceScheduledReason = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AppearanceScheduledReason collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean AppearanceScheduledReasonSpecified
        {
            get
            {
                return (this.AppearanceScheduledReason.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>This is a reference to the appearance from which this appearance was created.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the appearance from which this appearance was created.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("RescheduledFromAppearanceReference")]
        public String RescheduledFromAppearanceReference { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the appearance from which this appearance was created because it was adjourned.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the appearance from which this appearance was created beca" +
            "use it was adjourned.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("AdjournedFromAppearanceReference")]
        public String AdjournedFromAppearanceReference { get; set; }
        
        /// <summary>
        /// <para>The calendar number associated with the appearance, if any.</para>
        /// </summary>
        [DescriptionAttribute("The calendar number associated with the appearance, if any.")]
        [XmlElementAttribute("CalendarNumber")]
        public String CalendarNumber { get; set; }
        
        /// <summary>
        /// <para>This element contains information about the court reporter, if any, assigned to the appearance.</para>
        /// </summary>
        [DescriptionAttribute("This element contains information about the court reporter, if any, assigned to t" +
            "he appearance.")]
        [XmlElementAttribute("CourtReporter")]
        public CriminalDocketsDistrictCountyCourtDocketAppearanceCourtReporter CourtReporter { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the motion filed for the appearance, if this appearance is for a motion. Not all appearances are for motions.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the motion filed for the appearance, if this appearance is" +
            " for a motion. Not all appearances are for motions.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("MotionFiledReference")]
        public String MotionFiledReference { get; set; }
        
        /// <summary>
        /// <para>This indicates if the appearance is scheduled to happen virtually.</para>
        /// </summary>
        [DescriptionAttribute("This indicates if the appearance is scheduled to happen virtually.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IsVirtual")]
        public Boolean IsVirtualValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsVirtual property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IsVirtualValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This indicates if the appearance is scheduled to happen virtually.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Boolean> IsVirtual
        {
            get
            {
                if (this.IsVirtualValueSpecified)
                {
                    return this.IsVirtualValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsVirtualValue = value.GetValueOrDefault();
                this.IsVirtualValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If the appearance is scheduled to happen virtually, this will indicate the type of login that will be used. This comes from the VirtualLoginType dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("If the appearance is scheduled to happen virtually, this will indicate the type o" +
            "f login that will be used. This comes from the VirtualLoginType dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("VirtualLoginType")]
        public String VirtualLoginType { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceOutcome> _appearanceOutcome;
        
        /// <summary>
        /// <para>These are docket level outcomes that were given at an appearance. There may be none, and there may be more than one for any appearance.</para>
        /// </summary>
        [DescriptionAttribute("These are docket level outcomes that were given at an appearance. There may be no" +
            "ne, and there may be more than one for any appearance.")]
        [XmlElementAttribute("AppearanceOutcome")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceOutcome> AppearanceOutcome
        {
            get
            {
                return this._appearanceOutcome;
            }
            private set
            {
                this._appearanceOutcome = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AppearanceOutcome collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean AppearanceOutcomeSpecified
        {
            get
            {
                return (this.AppearanceOutcome.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each appearance, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same appearance retains the same identifier each time it appears in an extract. This identifier is of the form "Appearance-Sequence". It should be noted that: 
        ///o Appearance is literally "Appearance". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "Appearance-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each appearance, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same appearance retains the same identifier each time it appears in an extract. This identifier is of the form ""Appearance-Sequence"". It should be noted that: o Appearance is literally ""Appearance"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""Appearance-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("AppearanceID")]
        public String AppearanceID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketAppearanceAppearancePurpose", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketAppearanceAppearancePurpose
    {
        
        /// <summary>
        /// <para>This is the purpose of the appearance.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the purpose of the appearance.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("Purpose")]
        public String Purpose { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceScheduledReason", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceScheduledReason
    {
        
        /// <summary>
        /// <para>This is the reason why the appearance was scheduled. This comes from the ScheduledReasons dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the reason why the appearance was scheduled. This comes from the Schedule" +
            "dReasons dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("ScheduledReason")]
        public String ScheduledReason { get; set; }
        
        /// <summary>
        /// <para>This has comments (if any) entered by the court staff about this appearance scheduled reason.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This has comments (if any) entered by the court staff about this appearance sched" +
            "uled reason.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Comments")]
        public String Comments { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketAppearanceCourtReporter", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketAppearanceCourtReporter
    {
        
        /// <summary>
        /// <para>This is the person's fully formatted name with the last name first, for example, "Smith, Hon. Vishnu".</para>
        /// <para>This is a string that cannot exceed 1024 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 1024.</para>
        /// </summary>
        [DescriptionAttribute("This is the person\'s fully formatted name with the last name first, for example, " +
            "\"Smith, Hon. Vishnu\".")]
        [MaxLengthAttribute(1024)]
        [XmlElementAttribute("NameLastFirst")]
        public String NameLastFirst { get; set; }
        
        /// <summary>
        /// <para>If true, this name is for a person; otherwise, it is for an organization.  In the case of a CourtReporter, false will indicates that the court reporter was digital.</para>
        /// </summary>
        [DescriptionAttribute("If true, this name is for a person; otherwise, it is for an organization. In the " +
            "case of a CourtReporter, false will indicates that the court reporter was digita" +
            "l.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsPerson")]
        public Boolean IsPerson { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceOutcome", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceOutcome
    {
        
        /// <summary>
        /// <para>This is a docket level outcome that occurred on an appearance. This comes from the OutcomeTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is a docket level outcome that occurred on an appearance. This comes from th" +
            "e OutcomeTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("AppearanceOutcomeType")]
        public String AppearanceOutcomeType { get; set; }
        
        /// <summary>
        /// <para>If the outcome is a criminal transfer, this element contains additional information about the transfer.</para>
        /// </summary>
        [DescriptionAttribute("If the outcome is a criminal transfer, this element contains additional informati" +
            "on about the transfer.")]
        [XmlElementAttribute("CriminalTransferInfo")]
        public CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceOutcomeCriminalTransferInfo CriminalTransferInfo { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceOutcomeCriminalTransf" +
        "erInfo", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketAppearanceAppearanceOutcomeCriminalTransferInfo
    {
        
        /// <summary>
        /// <para>This is a reference to the court to which the docket was transferred.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the court to which the docket was transferred.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("TransferToCourtReference")]
        public String TransferToCourtReference { get; set; }
        
        /// <summary>
        /// <para>This is the reason given for the transfer, if any. This is freetext, as opposed to TransferReasonType which comes from a dictionary.</para>
        /// <para>This is a string that cannot exceed 4000 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 4000.</para>
        /// </summary>
        [DescriptionAttribute("This is the reason given for the transfer, if any. This is freetext, as opposed t" +
            "o TransferReasonType which comes from a dictionary.")]
        [MaxLengthAttribute(4000)]
        [XmlElementAttribute("TransferReason")]
        public String TransferReason { get; set; }
        
        /// <summary>
        /// <para>This is the case number of the case in the court the docket was transferred to, if given.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the case number of the case in the court the docket was transferred to, i" +
            "f given.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("TransferCourtCaseNumber")]
        public String TransferCourtCaseNumber { get; set; }
        
        /// <summary>
        /// <para>This is the reason why the docket was transferred, if given. This comes from the TransferReasons dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the reason why the docket was transferred, if given. This comes from the " +
            "TransferReasons dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("TransferReasonType")]
        public String TransferReasonType { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketMotion", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketMotion
    {
        
        /// <summary>
        /// <para>This is the type of the motion, and comes from the MotionTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of the motion, and comes from the MotionTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("MotionType")]
        public String MotionType { get; set; }
        
        /// <summary>
        /// <para>This is the number assigned to the motion.</para>
        /// </summary>
        [DescriptionAttribute("This is the number assigned to the motion.")]
        [XmlElementAttribute("MotionNumber")]
        public String MotionNumber { get; set; }
        
        /// <summary>
        /// <para>This is the date the motion was
        ///                                                                            filed, if available.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the motion was filed, if available.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FilingDate", DataType="date")]
        public DateTime FilingDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FilingDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FilingDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the motion was
        ///                                                                            filed, if available.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> FilingDate
        {
            get
            {
                if (this.FilingDateValueSpecified)
                {
                    return this.FilingDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FilingDateValue = value.GetValueOrDefault();
                this.FilingDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the entity which filed the motion, whether attorney or party.</para>
        /// </summary>
        [DescriptionAttribute("This is the entity which filed the motion, whether attorney or party.")]
        [RequiredAttribute()]
        [XmlElementAttribute("FilingEntity")]
        public CriminalDocketsDistrictCountyCourtDocketMotionFilingEntity FilingEntity { get; set; }
        
        /// <summary>
        /// <para>This is the date the motion was disposed, if disposed.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the motion was disposed, if disposed.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DispositionDate", DataType="date")]
        public DateTime DispositionDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DispositionDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DispositionDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the motion was disposed, if disposed.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> DispositionDate
        {
            get
            {
                if (this.DispositionDateValueSpecified)
                {
                    return this.DispositionDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DispositionDateValue = value.GetValueOrDefault();
                this.DispositionDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the description of the motion, if any.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the description of the motion, if any.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Description")]
        public String Description { get; set; }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each motion, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same motion retains the same identifier each time it appears in an extract. This identifier is of the form "Motion-Sequence". It should be noted that: 
        ///o Motion is literally "Motion". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "Motion-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each motion, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same motion retains the same identifier each time it appears in an extract. This identifier is of the form ""Motion-Sequence"". It should be noted that: o Motion is literally ""Motion"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""Motion-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("MotionID")]
        public String MotionID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketMotionFilingEntity", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketMotionFilingEntity
    {
        
        /// <summary>
        /// <para>This is the full name of the filing party.</para>
        /// </summary>
        [DescriptionAttribute("This is the full name of the filing party.")]
        [RequiredAttribute()]
        [XmlElementAttribute("FilingEntityName")]
        public FullName FilingEntityName { get; set; }
        
        /// <summary>
        /// <para>This is the role type for the entity who filed the motion, and comes from the RoleTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the role type for the entity who filed the motion, and comes from the Rol" +
            "eTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("FilingEntityRoleType")]
        public String FilingEntityRoleType { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketCharge", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketCharge
    {
        
        /// <summary>
        /// <para>An identifier that is unique to a particular charge on DCJS's Coded Laws File.</para>
        /// </summary>
        [DescriptionAttribute("An identifier that is unique to a particular charge on DCJS\'s Coded Laws File.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LawOrdinal")]
        public Decimal LawOrdinalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LawOrdinal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LawOrdinalValueSpecified { get; set; }
        
        /// <summary>
        /// <para>An identifier that is unique to a particular charge on DCJS's Coded Laws File.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> LawOrdinal
        {
            get
            {
                if (this.LawOrdinalValueSpecified)
                {
                    return this.LawOrdinalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LawOrdinalValue = value.GetValueOrDefault();
                this.LawOrdinalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is a technical description of the charge which includes the law title, article, section, subsection, and weight. This is a concatenation of the law title, article section, subsection, weight and description of the charge.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is a technical description of the charge which includes the law title, artic" +
            "le, section, subsection, and weight. This is a concatenation of the law title, a" +
            "rticle section, subsection, weight and description of the charge.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("FormattedChargeCode")]
        public String FormattedChargeCode { get; set; }
        
        /// <summary>
        /// <para>This is the classification of the charge.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the classification of the charge.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("LawTitle")]
        public String LawTitle { get; set; }
        
        /// <summary>
        /// <para>This is the section of law for the charge code.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the section of law for the charge code.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ArticleSection")]
        public String ArticleSection { get; set; }
        
        /// <summary>
        /// <para>This is the subsection of the law for this charge code.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the subsection of the law for this charge code.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("SubSection")]
        public String SubSection { get; set; }
        
        /// <summary>
        /// <para>This is the classification of the charge into felony, misdemeanor, along with severity.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the classification of the charge into felony, misdemeanor, along with sev" +
            "erity.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Weight")]
        public String Weight { get; set; }
        
        /// <summary>
        /// <para>For some charges, the degree identifies the level of intent of the crime. For example, first degree murder requires proof of pre-meditation while second degree murder does not. Some charges do not have a degree.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("For some charges, the degree identifies the level of intent of the crime. For exa" +
            "mple, first degree murder requires proof of pre-meditation while second degree m" +
            "urder does not. Some charges do not have a degree.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Degree")]
        public String Degree { get; set; }
        
        /// <summary>
        /// <para>This identifies the severity of the charge such as felony, misdemeanor, violation, and infraction. This comes from the WeightSeverityTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This identifies the severity of the charge such as felony, misdemeanor, violation" +
            ", and infraction. This comes from the WeightSeverityTypes dictionary.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("WeightSeverityType")]
        public String WeightSeverityType { get; set; }
        
        /// <summary>
        /// <para>This identifies the category of the charge, such as Drug, Marijuana, Weapon, etc ... Not all charges have categories.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This identifies the category of the charge, such as Drug, Marijuana, Weapon, etc " +
            "... Not all charges have categories.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Category")]
        public String Category { get; set; }
        
        /// <summary>
        /// <para>This is a human readable description of the charge, such as "Vio Liq Sale Consump Off Prems" for example.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is a human readable description of the charge, such as \"Vio Liq Sale Consump" +
            " Off Prems\" for example.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Description")]
        public String Description { get; set; }
        
        /// <summary>
        /// <para>This is the number of counts for this charge (the number of times the charge is attributed to the defendant).</para>
        /// </summary>
        [DescriptionAttribute("This is the number of counts for this charge (the number of times the charge is a" +
            "ttributed to the defendant).")]
        [RequiredAttribute()]
        [XmlElementAttribute("NumberOfCounts")]
        public String NumberOfCounts { get; set; }
        
        /// <summary>
        /// <para>This indicates the order the charge appears in the docket. The court decides the exact ordering of the charges. The first index number is 1. This element is used in conjunction with the NumberOfCounts field to determine how many charges are in the sequence. For example, if a charge has a starting index of 1, and a NumberOfCounts of 3, then the next charge's starting index would be 4 to make room for all of the counts for the first charge.</para>
        /// </summary>
        [DescriptionAttribute(@"This indicates the order the charge appears in the docket. The court decides the exact ordering of the charges. The first index number is 1. This element is used in conjunction with the NumberOfCounts field to determine how many charges are in the sequence. For example, if a charge has a starting index of 1, and a NumberOfCounts of 3, then the next charge's starting index would be 4 to make room for all of the counts for the first charge.")]
        [RequiredAttribute()]
        [XmlElementAttribute("StartingIndex")]
        public String StartingIndex { get; set; }
        
        /// <summary>
        /// <para>If true, this charge is considered the top charge at the time the defendant was arrested.</para>
        /// </summary>
        [DescriptionAttribute("If true, this charge is considered the top charge at the time the defendant was a" +
            "rrested.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsArrestTopCharge")]
        public Boolean IsArrestTopCharge { get; set; }
        
        /// <summary>
        /// <para>If true, this charge is considered the top charge at the time the docket was first arraigned.</para>
        /// </summary>
        [DescriptionAttribute("If true, this charge is considered the top charge at the time the docket was firs" +
            "t arraigned.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsArraignmentTopCharge")]
        public Boolean IsArraignmentTopCharge { get; set; }
        
        /// <summary>
        /// <para>If true, this charge is considered the top charge at the time the docket was disposed.</para>
        /// </summary>
        [DescriptionAttribute("If true, this charge is considered the top charge at the time the docket was disp" +
            "osed.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsDispositionTopCharge")]
        public Boolean IsDispositionTopCharge { get; set; }
        
        /// <summary>
        /// <para>If true, this charge is considered the top charge as of today.</para>
        /// </summary>
        [DescriptionAttribute("If true, this charge is considered the top charge as of today.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsCurrentTopCharge")]
        public Boolean IsCurrentTopCharge { get; set; }
        
        /// <summary>
        /// <para>If true, this charge is considered the top charge at the time the defendant was convicted.</para>
        /// </summary>
        [DescriptionAttribute("If true, this charge is considered the top charge at the time the defendant was c" +
            "onvicted.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsConvictionTopCharge")]
        public Boolean IsConvictionTopCharge { get; set; }
        
        /// <summary>
        /// <para>This indicates whether the crime was attempted or actually carried out. Some charges have an attempted variation, such as attempted murder, where the murder did not actually occur but the defendant intended to murder. Not all charges have an attempted variation.</para>
        /// </summary>
        [DescriptionAttribute(@"This indicates whether the crime was attempted or actually carried out. Some charges have an attempted variation, such as attempted murder, where the murder did not actually occur but the defendant intended to murder. Not all charges have an attempted variation.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsAttemptedCharge")]
        public Boolean IsAttemptedCharge { get; set; }
        
        /// <summary>
        /// <para>This is the defendant's criminal justice tracking number on this charge. This is generated from fingerprinting.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the defendant\'s criminal justice tracking number on this charge. This is " +
            "generated from fingerprinting.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("CJTN")]
        public String CJTN { get; set; }
        
        /// <summary>
        /// <para>This is the arresting agency's identifier for the arrest associated with this charge.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the arresting agency\'s identifier for the arrest associated with this cha" +
            "rge.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ArrestNumber")]
        public String ArrestNumber { get; set; }
        
        /// <summary>
        /// <para>This is the date the arrest occurred for this charge.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the arrest occurred for this charge.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ArrestDate", DataType="date")]
        public DateTime ArrestDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ArrestDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ArrestDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the arrest occurred for this charge.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> ArrestDate
        {
            get
            {
                if (this.ArrestDateValueSpecified)
                {
                    return this.ArrestDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ArrestDateValue = value.GetValueOrDefault();
                this.ArrestDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the time the arrest occurred for this charge, if known.</para>
        /// </summary>
        [DescriptionAttribute("This is the time the arrest occurred for this charge, if known.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ArrestTime", DataType="time")]
        public DateTime ArrestTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ArrestTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ArrestTimeValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the time the arrest occurred for this charge, if known.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> ArrestTime
        {
            get
            {
                if (this.ArrestTimeValueSpecified)
                {
                    return this.ArrestTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ArrestTimeValue = value.GetValueOrDefault();
                this.ArrestTimeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the type of seal for the charge if it has one. This comes from the SealTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of seal for the charge if it has one. This comes from the SealTy" +
            "pes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("SealType")]
        public String SealType { get; set; }
        
        /// <summary>
        /// <para>This is the date the charge was sealed, if any.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the charge was sealed, if any.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SealDate", DataType="date")]
        public DateTime SealDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SealDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SealDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the charge was sealed, if any.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> SealDate
        {
            get
            {
                if (this.SealDateValueSpecified)
                {
                    return this.SealDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SealDateValue = value.GetValueOrDefault();
                this.SealDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If true, then this charge came in with the arrest. Otherwise, the charge was added after the arrest.</para>
        /// </summary>
        [DescriptionAttribute("If true, then this charge came in with the arrest. Otherwise, the charge was adde" +
            "d after the arrest.")]
        [RequiredAttribute()]
        [XmlElementAttribute("ArrestChargeIndicator")]
        public Boolean ArrestChargeIndicator { get; set; }
        
        /// <summary>
        /// <para>This is ticket number, typically associated with a violation of vehicle and traffic law. The court may also enter the summons number in this field, if applicable.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is ticket number, typically associated with a violation of vehicle and traff" +
            "ic law. The court may also enter the summons number in this field, if applicable" +
            ".")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("TicketNumber")]
        public String TicketNumber { get; set; }
        
        /// <summary>
        /// <para>This contains the complaint number if entered by the court. A complaint number may be on the arrest paperwork in addition to a ticket number or arrest number. The court may also enter the summons number in this field, if applicable.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This contains the complaint number if entered by the court. A complaint number ma" +
            "y be on the arrest paperwork in addition to a ticket number or arrest number. Th" +
            "e court may also enter the summons number in this field, if applicable.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ComplaintNumber")]
        public String ComplaintNumber { get; set; }
        
        /// <summary>
        /// <para>This is the date in which the criminal offense occurred, if known.</para>
        /// </summary>
        [DescriptionAttribute("This is the date in which the criminal offense occurred, if known.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncidentDate", DataType="date")]
        public DateTime IncidentDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncidentDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncidentDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date in which the criminal offense occurred, if known.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> IncidentDate
        {
            get
            {
                if (this.IncidentDateValueSpecified)
                {
                    return this.IncidentDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncidentDateValue = value.GetValueOrDefault();
                this.IncidentDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the end date when a range of incident dates is captured. If the defendant committed crimes over a period of time, the date range is captured in the IncidentDate and IncidentEndDate fields.</para>
        /// </summary>
        [DescriptionAttribute("This is the end date when a range of incident dates is captured. If the defendant" +
            " committed crimes over a period of time, the date range is captured in the Incid" +
            "entDate and IncidentEndDate fields.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncidentEndDate", DataType="date")]
        public DateTime IncidentEndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncidentEndDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncidentEndDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the end date when a range of incident dates is captured. If the defendant committed crimes over a period of time, the date range is captured in the IncidentDate and IncidentEndDate fields.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> IncidentEndDate
        {
            get
            {
                if (this.IncidentEndDateValueSpecified)
                {
                    return this.IncidentEndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncidentEndDateValue = value.GetValueOrDefault();
                this.IncidentEndDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the measured blood alcohol concentration.</para>
        /// </summary>
        [DescriptionAttribute("This is the measured blood alcohol concentration.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BAC")]
        public Decimal BACValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BAC property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BACValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the measured blood alcohol concentration.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> BAC
        {
            get
            {
                if (this.BACValueSpecified)
                {
                    return this.BACValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BACValue = value.GetValueOrDefault();
                this.BACValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the agency that arrested the defendant, if available.  This come from the ArrestingAgencies dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the agency that arrested the defendant, if available. This come from the " +
            "ArrestingAgencies dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ArrestingAgency")]
        public String ArrestingAgency { get; set; }
        
        /// <summary>
        /// <para>This is the arresting officer.</para>
        /// </summary>
        [DescriptionAttribute("This is the arresting officer.")]
        [XmlElementAttribute("ArrestingOfficer")]
        public CriminalDocketsDistrictCountyCourtDocketChargeArrestingOfficer ArrestingOfficer { get; set; }
        
        /// <summary>
        /// <para>This is the precinct of the arresting agency, if available.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the precinct of the arresting agency, if available.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ArrestCommandPrecinct")]
        public String ArrestCommandPrecinct { get; set; }
        
        /// <summary>
        /// <para>This is the type of weapon used to commit the crime, if a weapon was used and the type is known.  This come from the WeaponTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of weapon used to commit the crime, if a weapon was used and the" +
            " type is known. This come from the WeaponTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("WeaponType")]
        public String WeaponType { get; set; }
        
        /// <summary>
        /// <para>If the charge is drug related, this is the type of drug associated with the charge.  This come from the DrugTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("If the charge is drug related, this is the type of drug associated with the charg" +
            "e. This come from the DrugTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("DrugType")]
        public String DrugType { get; set; }
        
        /// <summary>
        /// <para>If true, this charge is not part of the statewide dictionary of charges.</para>
        /// </summary>
        [DescriptionAttribute("If true, this charge is not part of the statewide dictionary of charges.")]
        [RequiredAttribute()]
        [XmlElementAttribute("ForcedFlag")]
        public Boolean ForcedFlag { get; set; }
        
        /// <summary>
        /// <para>This is the date the charge was either added, or was considered to be added nunc-pro tunc. In rare cases, a judge may order that a charge take effect on an earlier date, which is the meaning of nunc-pro tunc.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the charge was either added, or was considered to be added nunc-" +
            "pro tunc. In rare cases, a judge may order that a charge take effect on an earli" +
            "er date, which is the meaning of nunc-pro tunc.")]
        [RequiredAttribute()]
        [XmlElementAttribute("EffectiveStartDate", DataType="date")]
        public DateTime EffectiveStartDate { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentence> _sentence;
        
        [XmlElementAttribute("Sentence")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentence> Sentence
        {
            get
            {
                return this._sentence;
            }
            private set
            {
                this._sentence = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Sentence collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean SentenceSpecified
        {
            get
            {
                return (this.Sentence.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketCharge" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketCharge()
        {
            this._sentence = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentence>();
            this._chargeOutcomes = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomes>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomes> _chargeOutcomes;
        
        [XmlElementAttribute("ChargeOutcomes")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomes> ChargeOutcomes
        {
            get
            {
                return this._chargeOutcomes;
            }
            private set
            {
                this._chargeOutcomes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeOutcomes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean ChargeOutcomesSpecified
        {
            get
            {
                return (this.ChargeOutcomes.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each charge, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same charge retains the same identifier each time it appears in an extract. This identifier is of the form "Charge-Sequence". It should be noted that: 
        ///o Charge is literally "Charge". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "Charge-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each charge, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same charge retains the same identifier each time it appears in an extract. This identifier is of the form ""Charge-Sequence"". It should be noted that: o Charge is literally ""Charge"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""Charge-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("ChargeID")]
        public String ChargeID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeArrestingOfficer", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeArrestingOfficer
    {
        
        /// <summary>
        /// <para>This is the full name of the arresting officer.</para>
        /// </summary>
        [DescriptionAttribute("This is the full name of the arresting officer.")]
        [RequiredAttribute()]
        [XmlElementAttribute("ArrestingOfficerName")]
        public FullName ArrestingOfficerName { get; set; }
        
        /// <summary>
        /// <para>The shield number of the officer, if known.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("The shield number of the officer, if known.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ShieldNumber")]
        public String ShieldNumber { get; set; }
        
        /// <summary>
        /// <para>The command of the arresting officer, if known.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("The command of the arresting officer, if known.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Command")]
        public String Command { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentence", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentence
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItem> _sentenceItem;
        
        /// <summary>
        /// <para>This is one aspect of an overall sentence. Each sentence will have one or more sentence items. For example, a sentence could have two sentence items -- a fine and imprisonment. In such a case, there would be two sentence items.</para>
        /// </summary>
        [DescriptionAttribute("This is one aspect of an overall sentence. Each sentence will have one or more se" +
            "ntence items. For example, a sentence could have two sentence items -- a fine an" +
            "d imprisonment. In such a case, there would be two sentence items.")]
        [RequiredAttribute()]
        [XmlElementAttribute("SentenceItem")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItem> SentenceItem
        {
            get
            {
                return this._sentenceItem;
            }
            private set
            {
                this._sentenceItem = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeSentence" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeSentence()
        {
            this._sentenceItem = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItem>();
            this._sentenceOutcomeDetails = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetails>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetails> _sentenceOutcomeDetails;
        
        /// <summary>
        /// <para>This is a container full of sentence outcome information. Each sentence can have multiple outcomes.</para>
        /// </summary>
        [DescriptionAttribute("This is a container full of sentence outcome information. Each sentence can have " +
            "multiple outcomes.")]
        [XmlElementAttribute("SentenceOutcomeDetails")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetails> SentenceOutcomeDetails
        {
            get
            {
                return this._sentenceOutcomeDetails;
            }
            private set
            {
                this._sentenceOutcomeDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SentenceOutcomeDetails collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean SentenceOutcomeDetailsSpecified
        {
            get
            {
                return (this.SentenceOutcomeDetails.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>This stores the total amount of fines paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This stores the total amount of fines paid to date for this charge and sentence.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FinesPaid")]
        public Decimal FinesPaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinesPaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FinesPaidValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This stores the total amount of fines paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> FinesPaid
        {
            get
            {
                if (this.FinesPaidValueSpecified)
                {
                    return this.FinesPaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FinesPaidValue = value.GetValueOrDefault();
                this.FinesPaidValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This stores the total amount of surcharges paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This stores the total amount of surcharges paid to date for this charge and sente" +
            "nce.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SurchargesPaid")]
        public Decimal SurchargesPaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SurchargesPaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SurchargesPaidValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This stores the total amount of surcharges paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> SurchargesPaid
        {
            get
            {
                if (this.SurchargesPaidValueSpecified)
                {
                    return this.SurchargesPaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SurchargesPaidValue = value.GetValueOrDefault();
                this.SurchargesPaidValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This stores the total amount of DNA fees paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This stores the total amount of DNA fees paid to date for this charge and sentenc" +
            "e.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DNAFeesPaid")]
        public Decimal DNAFeesPaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DNAFeesPaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DNAFeesPaidValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This stores the total amount of DNA fees paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> DNAFeesPaid
        {
            get
            {
                if (this.DNAFeesPaidValueSpecified)
                {
                    return this.DNAFeesPaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DNAFeesPaidValue = value.GetValueOrDefault();
                this.DNAFeesPaidValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This stores the total amount of CVAF paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This stores the total amount of CVAF paid to date for this charge and sentence.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CVAFPaid")]
        public Decimal CVAFPaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CVAFPaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CVAFPaidValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This stores the total amount of CVAF paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> CVAFPaid
        {
            get
            {
                if (this.CVAFPaidValueSpecified)
                {
                    return this.CVAFPaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CVAFPaidValue = value.GetValueOrDefault();
                this.CVAFPaidValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This stores the total amount of SORA fees paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This stores the total amount of SORA fees paid to date for this charge and senten" +
            "ce.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SORAFeesPaid")]
        public Decimal SORAFeesPaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SORAFeesPaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SORAFeesPaidValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This stores the total amount of SORA fees paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> SORAFeesPaid
        {
            get
            {
                if (this.SORAFeesPaidValueSpecified)
                {
                    return this.SORAFeesPaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SORAFeesPaidValue = value.GetValueOrDefault();
                this.SORAFeesPaidValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This stores the total amount of SSOVF fees paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This stores the total amount of SSOVF fees paid to date for this charge and sente" +
            "nce.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SSOVFFeesPaid")]
        public Decimal SSOVFFeesPaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SSOVFFeesPaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SSOVFFeesPaidValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This stores the total amount of SSOVF fees paid to date for this charge and sentence.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> SSOVFFeesPaid
        {
            get
            {
                if (this.SSOVFFeesPaidValueSpecified)
                {
                    return this.SSOVFFeesPaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SSOVFFeesPaidValue = value.GetValueOrDefault();
                this.SSOVFFeesPaidValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This stores the total amount of fees paid to date for this charge and sentence, not already captured in other elements at this level.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This stores the total amount of fees paid to date for this charge and sentence, n" +
            "ot already captured in other elements at this level.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherFeesPaid")]
        public Decimal OtherFeesPaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherFeesPaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherFeesPaidValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This stores the total amount of fees paid to date for this charge and sentence, not already captured in other elements at this level.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> OtherFeesPaid
        {
            get
            {
                if (this.OtherFeesPaidValueSpecified)
                {
                    return this.OtherFeesPaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherFeesPaidValue = value.GetValueOrDefault();
                this.OtherFeesPaidValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If true, this is a resentence.</para>
        /// </summary>
        [DescriptionAttribute("If true, this is a resentence.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsResentence")]
        public Boolean IsResentence { get; set; }
        
        /// <summary>
        /// <para>If true, this sentence has been vacated.</para>
        /// </summary>
        [DescriptionAttribute("If true, this sentence has been vacated.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsVacated")]
        public Boolean IsVacated { get; set; }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each sentence, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same sentence retains the same identifier each time it appears in an extract. This identifier is of the form "Sentence-Sequence". It should be noted that: 
        ///o Sentence is literally "Sentence". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "Sentence-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each sentence, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same sentence retains the same identifier each time it appears in an extract. This identifier is of the form ""Sentence-Sequence"". It should be noted that: o Sentence is literally ""Sentence"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""Sentence-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("SentenceID")]
        public String SentenceID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItem", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItem
    {
        
        /// <summary>
        /// <para>This is a human readable summary of the sentence item.</para>
        /// <para>This is a string that cannot exceed 4000 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 4000.</para>
        /// </summary>
        [DescriptionAttribute("This is a human readable summary of the sentence item.")]
        [MaxLengthAttribute(4000)]
        [RequiredAttribute()]
        [XmlElementAttribute("SentenceItemHighlight")]
        public String SentenceItemHighlight { get; set; }
        
        /// <summary>
        /// <para>This is the type of sentence item on a sentence, such as "Fine", "Fee", "Imprisonment", etc ... This comes from the SentenceItemTypes dictionary.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of sentence item on a sentence, such as \"Fine\", \"Fee\", \"Imprison" +
            "ment\", etc ... This comes from the SentenceItemTypes dictionary.")]
        [RequiredAttribute()]
        [XmlElementAttribute("SentenceItemType")]
        public String SentenceItemType { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfo> _sentenceItemAdditionalInfo;
        
        /// <summary>
        /// <para>Certain sentence items have additional information associated with them. Only one of these items apply to any one sentence item.</para>
        /// </summary>
        [DescriptionAttribute("Certain sentence items have additional information associated with them. Only one" +
            " of these items apply to any one sentence item.")]
        [RequiredAttribute()]
        [XmlElementAttribute("SentenceItemAdditionalInfo")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfo> SentenceItemAdditionalInfo
        {
            get
            {
                return this._sentenceItemAdditionalInfo;
            }
            private set
            {
                this._sentenceItemAdditionalInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItem" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItem()
        {
            this._sentenceItemAdditionalInfo = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfo>();
        }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each sentence item, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same sentence item retains the same identifier each time it appears in an extract. This identifier is of the form "SentenceItem-Sequence". It should be noted that: 
        ///o SentenceItem is literally "SentenceItem". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "SentenceItem-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each sentence item, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same sentence item retains the same identifier each time it appears in an extract. This identifier is of the form ""SentenceItem-Sequence"". It should be noted that: o SentenceItem is literally ""SentenceItem"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""SentenceItem-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("SentenceItemID")]
        public String SentenceItemID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfo", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfo
    {
        
        /// <summary>
        /// <para>If the sentence item is a conditional discharge, this element contains additional conditional discharge details.</para>
        /// </summary>
        [DescriptionAttribute("If the sentence item is a conditional discharge, this element contains additional" +
            " conditional discharge details.")]
        [XmlElementAttribute("ConditionalDischarge")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischarge ConditionalDischarge { get; set; }
        
        /// <summary>
        /// <para>If the sentence item is for a fee, this element contains additional fee related information.</para>
        /// </summary>
        [DescriptionAttribute("If the sentence item is for a fee, this element contains additional fee related i" +
            "nformation.")]
        [XmlElementAttribute("FeeOverview")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFeeOverview FeeOverview { get; set; }
        
        /// <summary>
        /// <para>If the sentence item is for a fine, this element contains additional fine related information.</para>
        /// </summary>
        [DescriptionAttribute("If the sentence item is for a fine, this element contains additional fine related" +
            " information.")]
        [XmlElementAttribute("Fine")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFine Fine { get; set; }
        
        /// <summary>
        /// <para>If the sentence item is imprisonment, this element contains additional imprisonment details.</para>
        /// </summary>
        [DescriptionAttribute("If the sentence item is imprisonment, this element contains additional imprisonme" +
            "nt details.")]
        [XmlElementAttribute("Imprisonment")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonment Imprisonment { get; set; }
        
        /// <summary>
        /// <para>This is the container for any license related action such as suspension, revocation, and no action.</para>
        /// </summary>
        [DescriptionAttribute("This is the container for any license related action such as suspension, revocati" +
            "on, and no action.")]
        [XmlElementAttribute("LicenseAction")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoLicenseAction LicenseAction { get; set; }
        
        /// <summary>
        /// <para>This is the container for probation related conditions.</para>
        /// </summary>
        [DescriptionAttribute("This is the container for probation related conditions.")]
        [XmlElementAttribute("Probation")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbation Probation { get; set; }
        
        /// <summary>
        /// <para>This is the container for restitution related conditions.</para>
        /// </summary>
        [DescriptionAttribute("This is the container for restitution related conditions.")]
        [XmlElementAttribute("Restitution")]
        public Restitution Restitution { get; set; }
        
        /// <summary>
        /// <para>This element contains information about a registration that is revoked or suspended as part of a sentence.</para>
        /// </summary>
        [DescriptionAttribute("This element contains information about a registration that is revoked or suspend" +
            "ed as part of a sentence.")]
        [XmlElementAttribute("Registration")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoRegistration Registration { get; set; }
        
        /// <summary>
        /// <para>This element contains overall information about surcharges on a docket.</para>
        /// </summary>
        [DescriptionAttribute("This element contains overall information about surcharges on a docket.")]
        [XmlElementAttribute("SurchargeOverview")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoSurchargeOverview SurchargeOverview { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoConditionalDischarge", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischarge
    {
        
        /// <summary>
        /// <para>This is the period of time the conditional discharge will be in effect.</para>
        /// </summary>
        [DescriptionAttribute("This is the period of time the conditional discharge will be in effect.")]
        [RequiredAttribute()]
        [XmlElementAttribute("DischargeDuration")]
        public String DischargeDuration { get; set; }
        
        /// <summary>
        /// <para>This is the unit used for the conditional discharge duration, such as years, months, days, and hours. This comes from the DurationUnits dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the unit used for the conditional discharge duration, such as years, mont" +
            "hs, days, and hours. This comes from the DurationUnits dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("DischargeDurationUnit")]
        public String DischargeDurationUnit { get; set; }
        
        /// <summary>
        /// <para>This is any comments entered by the court staff about this conditional discharge.</para>
        /// <para>This is a string that cannot exceed 1024 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 1024.</para>
        /// </summary>
        [DescriptionAttribute("This is any comments entered by the court staff about this conditional discharge." +
            "")]
        [MaxLengthAttribute(1024)]
        [XmlElementAttribute("DischargeComments")]
        public String DischargeComments { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischargeDischargeCondition> _dischargeCondition;
        
        /// <summary>
        /// <para>This is a condition imposed on the conditional discharge.</para>
        /// </summary>
        [DescriptionAttribute("This is a condition imposed on the conditional discharge.")]
        [XmlElementAttribute("DischargeCondition")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischargeDischargeCondition> DischargeCondition
        {
            get
            {
                return this._dischargeCondition;
            }
            private set
            {
                this._dischargeCondition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DischargeCondition collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean DischargeConditionSpecified
        {
            get
            {
                return (this.DischargeCondition.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischarge" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischarge()
        {
            this._dischargeCondition = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischargeDischargeCondition>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoConditionalDischargeDischargeCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischargeDischargeCondition
    {
        
        /// <summary>
        /// <para>This is the type of conditional discharge, and this comes from the DischargeConditionTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of conditional discharge, and this comes from the DischargeCondi" +
            "tionTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("DischargeConditionType")]
        public String DischargeConditionType { get; set; }
        
        /// <summary>
        /// <para>Some discharge conditions have additional information associated with them.</para>
        /// </summary>
        [DescriptionAttribute("Some discharge conditions have additional information associated with them.")]
        [XmlElementAttribute("DischargeConditionDetails")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischargeDischargeConditionDischargeConditionDetails DischargeConditionDetails { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoConditionalDischargeDischargeConditionDischargeConditionDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischargeDischargeConditionDischargeConditionDetails
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CommunityServiceCondition> _communityServiceConditionForDischarge;
        
        /// <summary>
        /// <para>If the condition is for community service, this element stores additional community service details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for community service, this element stores additional communi" +
            "ty service details.")]
        [XmlElementAttribute("CommunityServiceConditionForDischarge")]
        public Collection<CommunityServiceCondition> CommunityServiceConditionForDischarge
        {
            get
            {
                return this._communityServiceConditionForDischarge;
            }
            private set
            {
                this._communityServiceConditionForDischarge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CommunityServiceConditionForDischarge collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean CommunityServiceConditionForDischargeSpecified
        {
            get
            {
                return (this.CommunityServiceConditionForDischarge.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischargeDischargeConditionDischargeConditionDetails" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoConditionalDischargeDischargeConditionDischargeConditionDetails()
        {
            this._communityServiceConditionForDischarge = new Collection<CommunityServiceCondition>();
            this._iIDConditionForDischarge = new Collection<IIDCondition>();
            this._restitutionConditionForDischarge = new Collection<Restitution>();
            this._treatmentMandateConditionForDischarge = new Collection<TreatmentMandateCondition>();
            this._weekendWorkProgramConditionForDischarge = new Collection<WeekendWorkProgramCondition>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IIDCondition> _iIDConditionForDischarge;
        
        /// <summary>
        /// <para>If the condition is for IID, this element stores additional IID details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for IID, this element stores additional IID details.")]
        [XmlElementAttribute("IIDConditionForDischarge")]
        public Collection<IIDCondition> IIDConditionForDischarge
        {
            get
            {
                return this._iIDConditionForDischarge;
            }
            private set
            {
                this._iIDConditionForDischarge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IIDConditionForDischarge collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean IIDConditionForDischargeSpecified
        {
            get
            {
                return (this.IIDConditionForDischarge.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<Restitution> _restitutionConditionForDischarge;
        
        /// <summary>
        /// <para>If the condition is for restitution, this element stores additional restitution details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for restitution, this element stores additional restitution d" +
            "etails.")]
        [XmlElementAttribute("RestitutionConditionForDischarge")]
        public Collection<Restitution> RestitutionConditionForDischarge
        {
            get
            {
                return this._restitutionConditionForDischarge;
            }
            private set
            {
                this._restitutionConditionForDischarge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RestitutionConditionForDischarge collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean RestitutionConditionForDischargeSpecified
        {
            get
            {
                return (this.RestitutionConditionForDischarge.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<TreatmentMandateCondition> _treatmentMandateConditionForDischarge;
        
        /// <summary>
        /// <para>If the condition is for a treatment mandate, this element stores additional treatment mandate details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for a treatment mandate, this element stores additional treat" +
            "ment mandate details.")]
        [XmlElementAttribute("TreatmentMandateConditionForDischarge")]
        public Collection<TreatmentMandateCondition> TreatmentMandateConditionForDischarge
        {
            get
            {
                return this._treatmentMandateConditionForDischarge;
            }
            private set
            {
                this._treatmentMandateConditionForDischarge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TreatmentMandateConditionForDischarge collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean TreatmentMandateConditionForDischargeSpecified
        {
            get
            {
                return (this.TreatmentMandateConditionForDischarge.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<WeekendWorkProgramCondition> _weekendWorkProgramConditionForDischarge;
        
        [XmlElementAttribute("WeekendWorkProgramConditionForDischarge")]
        public Collection<WeekendWorkProgramCondition> WeekendWorkProgramConditionForDischarge
        {
            get
            {
                return this._weekendWorkProgramConditionForDischarge;
            }
            private set
            {
                this._weekendWorkProgramConditionForDischarge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WeekendWorkProgramConditionForDischarge collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean WeekendWorkProgramConditionForDischargeSpecified
        {
            get
            {
                return (this.WeekendWorkProgramConditionForDischarge.Count != 0);
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoFeeOverview", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFeeOverview
    {
        
        /// <summary>
        /// <para>This is the date the fee must be paid by, if applicable.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the fee must be paid by, if applicable.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDate", DataType="date")]
        public DateTime DueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the fee must be paid by, if applicable.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> DueDate
        {
            get
            {
                if (this.DueDateValueSpecified)
                {
                    return this.DueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateValue = value.GetValueOrDefault();
                this.DueDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This field is used when a defendant does not pay the fee, then they are to be incarcerated for this number of days (and the fee is still due).</para>
        /// </summary>
        [DescriptionAttribute("This field is used when a defendant does not pay the fee, then they are to be inc" +
            "arcerated for this number of days (and the fee is still due).")]
        [XmlElementAttribute("JailDays")]
        public String JailDays { get; set; }
        
        /// <summary>
        /// <para>If true, an agency is to collect the fee, instead of the court.</para>
        /// </summary>
        [DescriptionAttribute("If true, an agency is to collect the fee, instead of the court.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsOtherAgencyToCollect")]
        public Boolean IsOtherAgencyToCollect { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFeeOverviewFee> _fee;
        
        /// <summary>
        /// <para>Each docket can actually have one or more fees of different types.</para>
        /// </summary>
        [DescriptionAttribute("Each docket can actually have one or more fees of different types.")]
        [XmlElementAttribute("Fee")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFeeOverviewFee> Fee
        {
            get
            {
                return this._fee;
            }
            private set
            {
                this._fee = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Fee collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean FeeSpecified
        {
            get
            {
                return (this.Fee.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFeeOverview" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFeeOverview()
        {
            this._fee = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFeeOverviewFee>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoFeeOverviewFee", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFeeOverviewFee
    {
        
        /// <summary>
        /// <para>This is the amount that needs to be paid for the fee.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount that needs to be paid for the fee.")]
        [RequiredAttribute()]
        [XmlElementAttribute("FeeAmount")]
        public Decimal FeeAmount { get; set; }
        
        /// <summary>
        /// <para>This is the type of fee, which comes from the SurchargeFeeTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of fee, which comes from the SurchargeFeeTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("FeeType")]
        public String FeeType { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoFine", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoFine
    {
        
        /// <summary>
        /// <para>This is the amount due for the fine.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount due for the fine.")]
        [RequiredAttribute()]
        [XmlElementAttribute("Amount")]
        public Decimal Amount { get; set; }
        
        /// <summary>
        /// <para>This is the date the fine must be paid by, if applicable.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the fine must be paid by, if applicable.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDate", DataType="date")]
        public DateTime DueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the fine must be paid by, if applicable.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> DueDate
        {
            get
            {
                if (this.DueDateValueSpecified)
                {
                    return this.DueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateValue = value.GetValueOrDefault();
                this.DueDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This field is used when a defendant does not pay the fine, then they are to be incarcerated for this number of days (and the fine is still due).</para>
        /// </summary>
        [DescriptionAttribute("This field is used when a defendant does not pay the fine, then they are to be in" +
            "carcerated for this number of days (and the fine is still due).")]
        [XmlElementAttribute("JailDays")]
        public String JailDays { get; set; }
        
        /// <summary>
        /// <para>If true, an agency is to collect the fine, instead of the court.</para>
        /// </summary>
        [DescriptionAttribute("If true, an agency is to collect the fine, instead of the court.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsOtherAgencyToCollect")]
        public Boolean IsOtherAgencyToCollect { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoImprisonment", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonment
    {
        
        /// <summary>
        /// <para>There are three types of imprisonment -- a fixed period, a range, or intermittent. This element contains additional details about each.</para>
        /// </summary>
        [DescriptionAttribute("There are three types of imprisonment -- a fixed period, a range, or intermittent" +
            ". This element contains additional details about each.")]
        [RequiredAttribute()]
        [XmlElementAttribute("ImprisonmentDetail")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonmentImprisonmentDetail ImprisonmentDetail { get; set; }
        
        /// <summary>
        /// <para>If true, the sentence item is served concurrently.</para>
        /// </summary>
        [DescriptionAttribute("If true, the sentence item is served concurrently.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsConcurrent")]
        public Boolean IsConcurrent { get; set; }
        
        /// <summary>
        /// <para>If true, the sentence item is served consecutively.</para>
        /// </summary>
        [DescriptionAttribute("If true, the sentence item is served consecutively.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsConsecutive")]
        public Boolean IsConsecutive { get; set; }
        
        /// <summary>
        /// <para>This is a freetext field where court staff may record any information about concurrent charges and imprisonment. This indicates that this sentence should run concurrently with the imprisonment sentence on the listed charge.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is a freetext field where court staff may record any information about concu" +
            "rrent charges and imprisonment. This indicates that this sentence should run con" +
            "currently with the imprisonment sentence on the listed charge.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ConcurrentWithCharges")]
        public String ConcurrentWithCharges { get; set; }
        
        /// <summary>
        /// <para>This is a freetext field where court staff may record any information about concurrent dockets and imprisonment. This indicates that this sentence should run concurrently with the imprisonment sentence on the listed docket or indictment.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is a freetext field where court staff may record any information about concu" +
            "rrent dockets and imprisonment. This indicates that this sentence should run con" +
            "currently with the imprisonment sentence on the listed docket or indictment.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ConcurrentWithDocket")]
        public String ConcurrentWithDocket { get; set; }
        
        /// <summary>
        /// <para>This is a freetext field where court staff may record any information about consecutive charges and imprisonment. This indicates that this sentence should run consecutively (e.g. one after the other) with the imprisonment sentence on the listed charge.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is a freetext field where court staff may record any information about conse" +
            "cutive charges and imprisonment. This indicates that this sentence should run co" +
            "nsecutively (e.g. one after the other) with the imprisonment sentence on the lis" +
            "ted charge.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ConsecutiveWithCharges")]
        public String ConsecutiveWithCharges { get; set; }
        
        /// <summary>
        /// <para>This is a freetext field where court staff may record any information about consecutive dockets and imprisonment. This indicates that this sentence should run consecutively (e.g. one after the other) with the imprisonment sentence on the listed docket or indicment.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute(@"This is a freetext field where court staff may record any information about consecutive dockets and imprisonment. This indicates that this sentence should run consecutively (e.g. one after the other) with the imprisonment sentence on the listed docket or indicment.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ConsecutiveWithDocket")]
        public String ConsecutiveWithDocket { get; set; }
        
        /// <summary>
        /// <para>If true, this imprisonment sentence item has an OP associated with it.</para>
        /// </summary>
        [DescriptionAttribute("If true, this imprisonment sentence item has an OP associated with it.")]
        [RequiredAttribute()]
        [XmlElementAttribute("HasOrderOfProtectionCondition")]
        public Boolean HasOrderOfProtectionCondition { get; set; }
        
        /// <summary>
        /// <para>This is a calculated field to conveniently summarize the sentence item's minimum imprisonment details for informational purposes only. The value in this field is an approximation. The official details are found under the ImprisonmentDetail element. This number indicates the number of days the primary party needs to spend in jail. If the sentence is indeterminate, this amount will represent the minimum number of days in jail.</para>
        /// </summary>
        [DescriptionAttribute(@"This is a calculated field to conveniently summarize the sentence item's minimum imprisonment details for informational purposes only. The value in this field is an approximation. The official details are found under the ImprisonmentDetail element. This number indicates the number of days the primary party needs to spend in jail. If the sentence is indeterminate, this amount will represent the minimum number of days in jail.")]
        [XmlElementAttribute("CalculatedMinImprisonmentDays")]
        public String CalculatedMinImprisonmentDays { get; set; }
        
        /// <summary>
        /// <para>This is a calculated field to conveniently summarize the sentence item's maximum imprisonment details for informational purposes only. The value in this field is an approximation. The official details are found under the ImprisonmentDetail element. This number indicates the number of days the primary party needs to spend in jail.</para>
        /// </summary>
        [DescriptionAttribute(@"This is a calculated field to conveniently summarize the sentence item's maximum imprisonment details for informational purposes only. The value in this field is an approximation. The official details are found under the ImprisonmentDetail element. This number indicates the number of days the primary party needs to spend in jail.")]
        [XmlElementAttribute("CalculatedMaxImprisonmentDays")]
        public String CalculatedMaxImprisonmentDays { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoImprisonmentImprisonmentDetail", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonmentImprisonmentDetail
    {
        
        /// <summary>
        /// <para>This is where the sentence occurs for a fixed amount of time.</para>
        /// </summary>
        [DescriptionAttribute("This is where the sentence occurs for a fixed amount of time.")]
        [XmlElementAttribute("FixedPeriod")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonmentImprisonmentDetailFixedPeriod FixedPeriod { get; set; }
        
        /// <summary>
        /// <para>This is where the time being served consists of periods of incarceration and periods of release, for example, 10 weekends where the defendant reports Friday nights and goes home Sunday nights.</para>
        /// </summary>
        [DescriptionAttribute("This is where the time being served consists of periods of incarceration and peri" +
            "ods of release, for example, 10 weekends where the defendant reports Friday nigh" +
            "ts and goes home Sunday nights.")]
        [XmlElementAttribute("Intermittent")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonmentImprisonmentDetailIntermittent Intermittent { get; set; }
        
        /// <summary>
        /// <para>This is an imprisonment sentence where the time being served is a range of time frames that has a minimum period of one year or more and a max term (i.e. 3 years - 5 years). After the minimum period then the defendant is eligible for parole.</para>
        /// </summary>
        [DescriptionAttribute("This is an imprisonment sentence where the time being served is a range of time f" +
            "rames that has a minimum period of one year or more and a max term (i.e. 3 years" +
            " - 5 years). After the minimum period then the defendant is eligible for parole." +
            "")]
        [XmlElementAttribute("Indeterminate")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonmentImprisonmentDetailIndeterminate Indeterminate { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoImprisonmentImprisonmentDetailFixedPeriod", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonmentImprisonmentDetailFixedPeriod
    {
        
        /// <summary>
        /// <para>Indicates whether or not time served is applied to the imprisonment.</para>
        /// </summary>
        [DescriptionAttribute("Indicates whether or not time served is applied to the imprisonment.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsTimeServed")]
        public Boolean IsTimeServed { get; set; }
        
        /// <summary>
        /// <para>Indicates whether or not the imprisonment is for life.</para>
        /// </summary>
        [DescriptionAttribute("Indicates whether or not the imprisonment is for life.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsForLife")]
        public Boolean IsForLife { get; set; }
        
        /// <summary>
        /// <para>The number of years of this sentence, which may be combined with other durations, such as 3 years and 5 months.</para>
        /// </summary>
        [DescriptionAttribute("The number of years of this sentence, which may be combined with other durations," +
            " such as 3 years and 5 months.")]
        [XmlElementAttribute("Years")]
        public String Years { get; set; }
        
        /// <summary>
        /// <para>The number of months of this sentence, which may be combined with other durations, such as 3 years and 5 months.</para>
        /// </summary>
        [DescriptionAttribute("The number of months of this sentence, which may be combined with other durations" +
            ", such as 3 years and 5 months.")]
        [XmlElementAttribute("Months")]
        public String Months { get; set; }
        
        /// <summary>
        /// <para>The number of weeks of this sentence, which may be combined with other durations, such as 6 months and 2 weeks.</para>
        /// </summary>
        [DescriptionAttribute("The number of weeks of this sentence, which may be combined with other durations," +
            " such as 6 months and 2 weeks.")]
        [XmlElementAttribute("Weeks")]
        public String Weeks { get; set; }
        
        /// <summary>
        /// <para>The number of days of this sentence, which may be combined with other durations, such as 4 weeks and 3 days.</para>
        /// </summary>
        [DescriptionAttribute("The number of days of this sentence, which may be combined with other durations, " +
            "such as 4 weeks and 3 days.")]
        [XmlElementAttribute("Days")]
        public String Days { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoImprisonmentImprisonmentDetailIntermittent", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonmentImprisonmentDetailIntermittent
    {
        
        /// <summary>
        /// <para>This is the length of time in years during which the sentence will be served intermittently. This may be combined with the month, week, and day durations.</para>
        /// </summary>
        [DescriptionAttribute("This is the length of time in years during which the sentence will be served inte" +
            "rmittently. This may be combined with the month, week, and day durations.")]
        [XmlElementAttribute("Years")]
        public String Years { get; set; }
        
        /// <summary>
        /// <para>This is the length of time in months during which the sentence will be served intermittently. This may be combined with the year, week, and day durations.</para>
        /// </summary>
        [DescriptionAttribute("This is the length of time in months during which the sentence will be served int" +
            "ermittently. This may be combined with the year, week, and day durations.")]
        [XmlElementAttribute("Months")]
        public String Months { get; set; }
        
        /// <summary>
        /// <para>This is the length of time in weeks during which the sentence will be served intermittently. This may be combined with the year, month, and day durations.</para>
        /// </summary>
        [DescriptionAttribute("This is the length of time in weeks during which the sentence will be served inte" +
            "rmittently. This may be combined with the year, month, and day durations.")]
        [XmlElementAttribute("Weeks")]
        public String Weeks { get; set; }
        
        /// <summary>
        /// <para>This is the length of time in days during which the sentence will be served intermittently. This may be combined with the years, month, and week durations.</para>
        /// </summary>
        [DescriptionAttribute("This is the length of time in days during which the sentence will be served inter" +
            "mittently. This may be combined with the years, month, and week durations.")]
        [XmlElementAttribute("Days")]
        public String Days { get; set; }
        
        /// <summary>
        /// <para>This is the day of the week that the person must show up to prison each week.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the day of the week that the person must show up to prison each week.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("StartDayOfWeek")]
        public String StartDayOfWeek { get; set; }
        
        /// <summary>
        /// <para>This is the day of the week when the person will leave prison each week.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the day of the week when the person will leave prison each week.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("EndDayOfWeek")]
        public String EndDayOfWeek { get; set; }
        
        /// <summary>
        /// <para>This is the time of the day that the person must show up to prison by each week. This is a freetext field in the UCMS application.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the time of the day that the person must show up to prison by each week. " +
            "This is a freetext field in the UCMS application.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("StartTime")]
        public String StartTime { get; set; }
        
        /// <summary>
        /// <para>This is the time of the day that the person will be released from prison by each week. This is a freetext field in the UCMS application.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the time of the day that the person will be released from prison by each " +
            "week. This is a freetext field in the UCMS application.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("EndTime")]
        public String EndTime { get; set; }
        
        /// <summary>
        /// <para>This is the last date and time that the person must continue showing up to prison, and is used in sentences where the judge states that the defendant must show up until a certain date and time.</para>
        /// </summary>
        [DescriptionAttribute("This is the last date and time that the person must continue showing up to prison" +
            ", and is used in sentences where the judge states that the defendant must show u" +
            "p until a certain date and time.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EndDateTime", DataType="dateTime")]
        public DateTime EndDateTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDateTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EndDateTimeValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the last date and time that the person must continue showing up to prison, and is used in sentences where the judge states that the defendant must show up until a certain date and time.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> EndDateTime
        {
            get
            {
                if (this.EndDateTimeValueSpecified)
                {
                    return this.EndDateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EndDateTimeValue = value.GetValueOrDefault();
                this.EndDateTimeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If true, this indicates the starting and ending days when the defendant must report to prison are not known.</para>
        /// </summary>
        [DescriptionAttribute("If true, this indicates the starting and ending days when the defendant must repo" +
            "rt to prison are not known.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsStartEndDayUnknown")]
        public Boolean IsStartEndDayUnknown { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoImprisonmentImprisonmentDetailIndeterminate", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoImprisonmentImprisonmentDetailIndeterminate
    {
        
        /// <summary>
        /// <para>This is the minimum number of years of the sentence. This may be combined with month, week, and day minimums.</para>
        /// </summary>
        [DescriptionAttribute("This is the minimum number of years of the sentence. This may be combined with mo" +
            "nth, week, and day minimums.")]
        [XmlElementAttribute("MinimumYears")]
        public String MinimumYears { get; set; }
        
        /// <summary>
        /// <para>This is the minimum number of months of the sentence. This may be combined with year, week, and day minimums.</para>
        /// </summary>
        [DescriptionAttribute("This is the minimum number of months of the sentence. This may be combined with y" +
            "ear, week, and day minimums.")]
        [XmlElementAttribute("MinimumMonths")]
        public String MinimumMonths { get; set; }
        
        /// <summary>
        /// <para>This is the minimum number of weeks of the sentence. This may be combined with year, onth, and day minimums.</para>
        /// </summary>
        [DescriptionAttribute("This is the minimum number of weeks of the sentence. This may be combined with ye" +
            "ar, onth, and day minimums.")]
        [XmlElementAttribute("MinimumWeeks")]
        public String MinimumWeeks { get; set; }
        
        /// <summary>
        /// <para>This is the minimum number of days of the sentence. This may be combined with year, month, and week minimums.</para>
        /// </summary>
        [DescriptionAttribute("This is the minimum number of days of the sentence. This may be combined with yea" +
            "r, month, and week minimums.")]
        [XmlElementAttribute("MinimumDays")]
        public String MinimumDays { get; set; }
        
        /// <summary>
        /// <para>This is the maximum number of years of the sentence. This may be combined with month, week, and day maximums.</para>
        /// </summary>
        [DescriptionAttribute("This is the maximum number of years of the sentence. This may be combined with mo" +
            "nth, week, and day maximums.")]
        [XmlElementAttribute("MaximumYears")]
        public String MaximumYears { get; set; }
        
        /// <summary>
        /// <para>This is the maximum number of months of the sentence. This may be combined with year, week, and day maximums.</para>
        /// </summary>
        [DescriptionAttribute("This is the maximum number of months of the sentence. This may be combined with y" +
            "ear, week, and day maximums.")]
        [XmlElementAttribute("MaximumMonths")]
        public String MaximumMonths { get; set; }
        
        /// <summary>
        /// <para>This is the maximum number of weeks of the sentence. This may be combined with year, onth, and day maximums.</para>
        /// </summary>
        [DescriptionAttribute("This is the maximum number of weeks of the sentence. This may be combined with ye" +
            "ar, onth, and day maximums.")]
        [XmlElementAttribute("MaximumWeeks")]
        public String MaximumWeeks { get; set; }
        
        /// <summary>
        /// <para>This is the maximum number of days of the sentence. This may be combined with year, month, and week maximums.</para>
        /// </summary>
        [DescriptionAttribute("This is the maximum number of days of the sentence. This may be combined with yea" +
            "r, month, and week maximums.")]
        [XmlElementAttribute("MaximumDays")]
        public String MaximumDays { get; set; }
        
        /// <summary>
        /// <para>If true, the maximum time the sentence must be served is life.</para>
        /// </summary>
        [DescriptionAttribute("If true, the maximum time the sentence must be served is life.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsMaxForLife")]
        public Boolean IsMaxForLife { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoLicenseAction", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoLicenseAction
    {
        
        /// <summary>
        /// <para>This is the type of license action, such as suspension, revocation, or no action. This comes from the LicenseActionTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of license action, such as suspension, revocation, or no action." +
            " This comes from the LicenseActionTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("LicenseActionType")]
        public String LicenseActionType { get; set; }
        
        /// <summary>
        /// <para>This is the period of time the action against the license will be in effect.</para>
        /// </summary>
        [DescriptionAttribute("This is the period of time the action against the license will be in effect.")]
        [XmlElementAttribute("LicenseActionDuration")]
        public String LicenseActionDuration { get; set; }
        
        /// <summary>
        /// <para>This is the unit used for the license action duration, such as years, months, days, and hours. This comes from the DurationUnits dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the unit used for the license action duration, such as years, months, day" +
            "s, and hours. This comes from the DurationUnits dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("LicenseActionDurationUnit")]
        public String LicenseActionDurationUnit { get; set; }
        
        /// <summary>
        /// <para>If true, this license action is mandatory; otherwise, it is permissive.</para>
        /// </summary>
        [DescriptionAttribute("If true, this license action is mandatory; otherwise, it is permissive.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsMandatory")]
        public Boolean IsMandatory { get; set; }
        
        /// <summary>
        /// <para>If true, the license must be surrendered.</para>
        /// </summary>
        [DescriptionAttribute("If true, the license must be surrendered.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsLicenseSurrendered")]
        public Boolean IsLicenseSurrendered { get; set; }
        
        /// <summary>
        /// <para>If true, the action on this license is permanent.</para>
        /// </summary>
        [DescriptionAttribute("If true, the action on this license is permanent.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsPermanent")]
        public Boolean IsPermanent { get; set; }
        
        /// <summary>
        /// <para>If true, the defendant must obtain permission from the court in order to re-apply for their license. The defendant can possibly be required to obtain permission from both the court and from probation.</para>
        /// </summary>
        [DescriptionAttribute("If true, the defendant must obtain permission from the court in order to re-apply" +
            " for their license. The defendant can possibly be required to obtain permission " +
            "from both the court and from probation.")]
        [RequiredAttribute()]
        [XmlElementAttribute("MustObtainCourtPermission")]
        public Boolean MustObtainCourtPermission { get; set; }
        
        /// <summary>
        /// <para>If true, the defendant must obtain permission from probation in order to re-apply for their license. The defendant can possibly be required to obtain permission from both the court and from probation.</para>
        /// </summary>
        [DescriptionAttribute("If true, the defendant must obtain permission from probation in order to re-apply" +
            " for their license. The defendant can possibly be required to obtain permission " +
            "from both the court and from probation.")]
        [RequiredAttribute()]
        [XmlElementAttribute("MustObtainProbationPermission")]
        public Boolean MustObtainProbationPermission { get; set; }
        
        /// <summary>
        /// <para>If true, this license sentence is stayed for 20 days after the sentence date.</para>
        /// </summary>
        [DescriptionAttribute("If true, this license sentence is stayed for 20 days after the sentence date.")]
        [RequiredAttribute()]
        [XmlElementAttribute("Has20DayStay")]
        public Boolean Has20DayStay { get; set; }
        
        /// <summary>
        /// <para>If true, the MV1192 (Order of Suspension or Revocation) has been signed by the defendant.</para>
        /// </summary>
        [DescriptionAttribute("If true, the MV1192 (Order of Suspension or Revocation) has been signed by the de" +
            "fendant.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsMotorVehicle1192Signed")]
        public Boolean IsMotorVehicle1192Signed { get; set; }
        
        /// <summary>
        /// <para>If true, MV1192 (Order of Suspension or Revocation) has been ordered by the judge as part of this sentence.</para>
        /// </summary>
        [DescriptionAttribute("If true, MV1192 (Order of Suspension or Revocation) has been ordered by the judge" +
            " as part of this sentence.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsMotorVehicle1192Issued")]
        public Boolean IsMotorVehicle1192Issued { get; set; }
        
        /// <summary>
        /// <para>This indicates the requirement of the defendant to participate in a drunk driver program. If "Mandatory", the defendant must participate. If "Permissive", the judge ordered it but it isn't mandatory. If "Prohibited", the defendant is prohibited from attending a program.  This comes from the DrunkDriverProgramRequirement dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute(@"This indicates the requirement of the defendant to participate in a drunk driver program. If ""Mandatory"", the defendant must participate. If ""Permissive"", the judge ordered it but it isn't mandatory. If ""Prohibited"", the defendant is prohibited from attending a program. This comes from the DrunkDriverProgramRequirement dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("DrunkDriverProgramRequirement")]
        public String DrunkDriverProgramRequirement { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoProbation", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbation
    {
        
        /// <summary>
        /// <para>This is the period of time the probation will be in effect.</para>
        /// </summary>
        [DescriptionAttribute("This is the period of time the probation will be in effect.")]
        [RequiredAttribute()]
        [XmlElementAttribute("ProbationDuration")]
        public String ProbationDuration { get; set; }
        
        /// <summary>
        /// <para>This is the unit used for the probation duration, such as years, months, days, and hours. This comes from the DurationUnits dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the unit used for the probation duration, such as years, months, days, an" +
            "d hours. This comes from the DurationUnits dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("ProbationDurationUnit")]
        public String ProbationDurationUnit { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbationProbationCondition> _probationCondition;
        
        /// <summary>
        /// <para>This is a condition imposed on the probation sentence.</para>
        /// </summary>
        [DescriptionAttribute("This is a condition imposed on the probation sentence.")]
        [XmlElementAttribute("ProbationCondition")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbationProbationCondition> ProbationCondition
        {
            get
            {
                return this._probationCondition;
            }
            private set
            {
                this._probationCondition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ProbationCondition collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean ProbationConditionSpecified
        {
            get
            {
                return (this.ProbationCondition.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbation" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbation()
        {
            this._probationCondition = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbationProbationCondition>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoProbationProbationCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbationProbationCondition
    {
        
        /// <summary>
        /// <para>This is the type of probation condition, and this comes from the ProbationConditionTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of probation condition, and this comes from the ProbationConditi" +
            "onTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("ProbationConditionType")]
        public String ProbationConditionType { get; set; }
        
        /// <summary>
        /// <para>Some probation conditions have additional information associated with them.</para>
        /// </summary>
        [DescriptionAttribute("Some probation conditions have additional information associated with them.")]
        [RequiredAttribute()]
        [XmlElementAttribute("ProbationConditionDetails")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbationProbationConditionProbationConditionDetails ProbationConditionDetails { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoProbationProbationConditionProbationConditionDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbationProbationConditionProbationConditionDetails
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CommunityServiceCondition> _communityServiceConditionForProbation;
        
        /// <summary>
        /// <para>If the condition is for community service, this element stores additional community service details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for community service, this element stores additional communi" +
            "ty service details.")]
        [XmlElementAttribute("CommunityServiceConditionForProbation")]
        public Collection<CommunityServiceCondition> CommunityServiceConditionForProbation
        {
            get
            {
                return this._communityServiceConditionForProbation;
            }
            private set
            {
                this._communityServiceConditionForProbation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CommunityServiceConditionForProbation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean CommunityServiceConditionForProbationSpecified
        {
            get
            {
                return (this.CommunityServiceConditionForProbation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbationProbationConditionProbationConditionDetails" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoProbationProbationConditionProbationConditionDetails()
        {
            this._communityServiceConditionForProbation = new Collection<CommunityServiceCondition>();
            this._iIDConditionForProbation = new Collection<IIDCondition>();
            this._restitutionConditionForProbation = new Collection<Restitution>();
            this._treatmentMandateConditionForProbation = new Collection<TreatmentMandateCondition>();
            this._weekendWorkProgramConditionForProbation = new Collection<WeekendWorkProgramCondition>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IIDCondition> _iIDConditionForProbation;
        
        /// <summary>
        /// <para>If the condition is for IID, this element stores additional IID details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for IID, this element stores additional IID details.")]
        [XmlElementAttribute("IIDConditionForProbation")]
        public Collection<IIDCondition> IIDConditionForProbation
        {
            get
            {
                return this._iIDConditionForProbation;
            }
            private set
            {
                this._iIDConditionForProbation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IIDConditionForProbation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean IIDConditionForProbationSpecified
        {
            get
            {
                return (this.IIDConditionForProbation.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<Restitution> _restitutionConditionForProbation;
        
        /// <summary>
        /// <para>If the condition is for restitution, this element stores additional restitution details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for restitution, this element stores additional restitution d" +
            "etails.")]
        [XmlElementAttribute("RestitutionConditionForProbation")]
        public Collection<Restitution> RestitutionConditionForProbation
        {
            get
            {
                return this._restitutionConditionForProbation;
            }
            private set
            {
                this._restitutionConditionForProbation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RestitutionConditionForProbation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean RestitutionConditionForProbationSpecified
        {
            get
            {
                return (this.RestitutionConditionForProbation.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<TreatmentMandateCondition> _treatmentMandateConditionForProbation;
        
        /// <summary>
        /// <para>If the condition is for a treatment mandate, this element stores additional treatment mandate details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for a treatment mandate, this element stores additional treat" +
            "ment mandate details.")]
        [XmlElementAttribute("TreatmentMandateConditionForProbation")]
        public Collection<TreatmentMandateCondition> TreatmentMandateConditionForProbation
        {
            get
            {
                return this._treatmentMandateConditionForProbation;
            }
            private set
            {
                this._treatmentMandateConditionForProbation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TreatmentMandateConditionForProbation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean TreatmentMandateConditionForProbationSpecified
        {
            get
            {
                return (this.TreatmentMandateConditionForProbation.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<WeekendWorkProgramCondition> _weekendWorkProgramConditionForProbation;
        
        [XmlElementAttribute("WeekendWorkProgramConditionForProbation")]
        public Collection<WeekendWorkProgramCondition> WeekendWorkProgramConditionForProbation
        {
            get
            {
                return this._weekendWorkProgramConditionForProbation;
            }
            private set
            {
                this._weekendWorkProgramConditionForProbation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WeekendWorkProgramConditionForProbation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean WeekendWorkProgramConditionForProbationSpecified
        {
            get
            {
                return (this.WeekendWorkProgramConditionForProbation.Count != 0);
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoRegistration", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoRegistration
    {
        
        /// <summary>
        /// <para>If true, the registration is suspended. A registration can either be suspended or revoked, but not both.</para>
        /// </summary>
        [DescriptionAttribute("If true, the registration is suspended. A registration can either be suspended or" +
            " revoked, but not both.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsSuspended")]
        public Boolean IsSuspended { get; set; }
        
        /// <summary>
        /// <para>If true, the registration is revoked. A registration can either be suspended or revoked, but not both.</para>
        /// </summary>
        [DescriptionAttribute("If true, the registration is revoked. A registration can either be suspended or r" +
            "evoked, but not both.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsRevoked")]
        public Boolean IsRevoked { get; set; }
        
        /// <summary>
        /// <para>This is the period of time the registration suspension or revocation will be in effect.</para>
        /// </summary>
        [DescriptionAttribute("This is the period of time the registration suspension or revocation will be in e" +
            "ffect.")]
        [RequiredAttribute()]
        [XmlElementAttribute("RegistrationActionDuration")]
        public String RegistrationActionDuration { get; set; }
        
        /// <summary>
        /// <para>This is the unit used for the registration action duration, such as years, months, days, and hours. This comes from the DurationUnits dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the unit used for the registration action duration, such as years, months" +
            ", days, and hours. This comes from the DurationUnits dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("RegistrationActionDurationUnit")]
        public String RegistrationActionDurationUnit { get; set; }
        
        /// <summary>
        /// <para>If true, this registration action is mandatory; otherwise, it is permissive.</para>
        /// </summary>
        [DescriptionAttribute("If true, this registration action is mandatory; otherwise, it is permissive.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsMandatory")]
        public Boolean IsMandatory { get; set; }
        
        /// <summary>
        /// <para>If true, this suspension or revocation applies to all vehicles.</para>
        /// </summary>
        [DescriptionAttribute("If true, this suspension or revocation applies to all vehicles.")]
        [RequiredAttribute()]
        [XmlElementAttribute("AppliesToAllVehicles")]
        public Boolean AppliesToAllVehicles { get; set; }
        
        /// <summary>
        /// <para>This is the plate number of the vehicle for which the revocation or suspension applies, if known.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the plate number of the vehicle for which the revocation or suspension ap" +
            "plies, if known.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("PlateNumber")]
        public String PlateNumber { get; set; }
        
        /// <summary>
        /// <para>This is the vehicle identification number (VIN) of the vehicle for which the revocation or suspension applies, if known.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the vehicle identification number (VIN) of the vehicle for which the revo" +
            "cation or suspension applies, if known.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("VIN")]
        public String VIN { get; set; }
        
        /// <summary>
        /// <para>This is the type of vehicle to which the revocation or suspension applies, such as Bus, Passenger, Motorcycle, and the like. This comes from the TrafficVehicleTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of vehicle to which the revocation or suspension applies, such a" +
            "s Bus, Passenger, Motorcycle, and the like. This comes from the TrafficVehicleTy" +
            "pes dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("TrafficVehicleType")]
        public String TrafficVehicleType { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoSurchargeOverview", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoSurchargeOverview
    {
        
        /// <summary>
        /// <para>All sentences must have a surcharge, but in many situations the surcharge is not applied. If this field is true, it means no surcharge has been applied to the sentence.</para>
        /// </summary>
        [DescriptionAttribute("All sentences must have a surcharge, but in many situations the surcharge is not " +
            "applied. If this field is true, it means no surcharge has been applied to the se" +
            "ntence.")]
        [RequiredAttribute()]
        [XmlElementAttribute("HasNoSurcharge")]
        public Boolean HasNoSurcharge { get; set; }
        
        /// <summary>
        /// <para>This is the date the fee must be paid by, if applicable.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the fee must be paid by, if applicable.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDate", DataType="date")]
        public DateTime DueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the fee must be paid by, if applicable.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> DueDate
        {
            get
            {
                if (this.DueDateValueSpecified)
                {
                    return this.DueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateValue = value.GetValueOrDefault();
                this.DueDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This field is used when a defendant does not pay the surcharge, then they are to be incarcerated for this number of days (and the surcharge is still due).</para>
        /// </summary>
        [DescriptionAttribute("This field is used when a defendant does not pay the surcharge, then they are to " +
            "be incarcerated for this number of days (and the surcharge is still due).")]
        [XmlElementAttribute("JailDays")]
        public String JailDays { get; set; }
        
        /// <summary>
        /// <para>If true, an agency is to collect the surcharge, instead of the court.</para>
        /// </summary>
        [DescriptionAttribute("If true, an agency is to collect the surcharge, instead of the court.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsOtherAgencyToCollect")]
        public Boolean IsOtherAgencyToCollect { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoSurchargeOverviewSurcharge> _surcharge;
        
        /// <summary>
        /// <para>Each docket can have several surcharges with different types.</para>
        /// </summary>
        [DescriptionAttribute("Each docket can have several surcharges with different types.")]
        [XmlElementAttribute("Surcharge")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoSurchargeOverviewSurcharge> Surcharge
        {
            get
            {
                return this._surcharge;
            }
            private set
            {
                this._surcharge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Surcharge collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean SurchargeSpecified
        {
            get
            {
                return (this.Surcharge.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoSurchargeOverview" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoSurchargeOverview()
        {
            this._surcharge = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoSurchargeOverviewSurcharge>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdd" +
        "itionalInfoSurchargeOverviewSurcharge", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceItemSentenceItemAdditionalInfoSurchargeOverviewSurcharge
    {
        
        /// <summary>
        /// <para>This is the amount that needs to be paid for the surcharge.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount that needs to be paid for the surcharge.")]
        [RequiredAttribute()]
        [XmlElementAttribute("SurchargeAmount")]
        public Decimal SurchargeAmount { get; set; }
        
        /// <summary>
        /// <para>This is the type of surcharge, which comes from the SurchargeFeeTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of surcharge, which comes from the SurchargeFeeTypes dictionary." +
            "")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("SurchargeType")]
        public String SurchargeType { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetails
    {
        
        /// <summary>
        /// <para>This is the outcome itself, such as Sentence Executed, Sentence Imposed, Sentence Imposed in Absentia, Sentence Execution Stayed, Sentence Terminated, Sentence Vacated, Sentence Advanced. This comes from the SentenceOutcomes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the outcome itself, such as Sentence Executed, Sentence Imposed, Sentence" +
            " Imposed in Absentia, Sentence Execution Stayed, Sentence Terminated, Sentence V" +
            "acated, Sentence Advanced. This comes from the SentenceOutcomes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("SentenceOutcome")]
        public String SentenceOutcome { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the appearance on which this outcome takes effect.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the appearance on which this outcome takes effect.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("EffectiveAppearanceReference")]
        public String EffectiveAppearanceReference { get; set; }
        
        /// <summary>
        /// <para>This is the date the outcome took effect.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the outcome took effect.")]
        [RequiredAttribute()]
        [XmlElementAttribute("EffectiveDate", DataType="date")]
        public DateTime EffectiveDate { get; set; }
        
        /// <summary>
        /// <para>If the sentence outcome is "Sentence Execution Stayed", this contains additional info about that outcome.</para>
        /// </summary>
        [DescriptionAttribute("If the sentence outcome is \"Sentence Execution Stayed\", this contains additional " +
            "info about that outcome.")]
        [XmlElementAttribute("ExecutionStayedDetails")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetailsExecutionStayedDetails ExecutionStayedDetails { get; set; }
        
        /// <summary>
        /// <para>If a sentence is amended, or replaced with a resentence, this element contains additional information about such activity.</para>
        /// </summary>
        [DescriptionAttribute("If a sentence is amended, or replaced with a resentence, this element contains ad" +
            "ditional information about such activity.")]
        [XmlElementAttribute("SentenceOutcomeAdvancement")]
        public CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetailsSentenceOutcomeAdvancement SentenceOutcomeAdvancement { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetailsExecu" +
        "tionStayedDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetailsExecutionStayedDetails
    {
        
        /// <summary>
        /// <para>If known, the date the outcome is stayed until is given.</para>
        /// </summary>
        [DescriptionAttribute("If known, the date the outcome is stayed until is given.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StayedUntilDate", DataType="date")]
        public DateTime StayedUntilDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StayedUntilDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StayedUntilDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>If known, the date the outcome is stayed until is given.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> StayedUntilDate
        {
            get
            {
                if (this.StayedUntilDateValueSpecified)
                {
                    return this.StayedUntilDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StayedUntilDateValue = value.GetValueOrDefault();
                this.StayedUntilDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If true, the date the outcome is stayed until is unknown.</para>
        /// </summary>
        [DescriptionAttribute("If true, the date the outcome is stayed until is unknown.")]
        [RequiredAttribute()]
        [XmlElementAttribute("StayedUntilDateUnknown")]
        public Boolean StayedUntilDateUnknown { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetailsSente" +
        "nceOutcomeAdvancement", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeSentenceSentenceOutcomeDetailsSentenceOutcomeAdvancement
    {
        
        /// <summary>
        /// <para>If true, this outcome indicates this sentence is being resentenced.</para>
        /// </summary>
        [DescriptionAttribute("If true, this outcome indicates this sentence is being resentenced.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsResentence")]
        public Boolean IsResentence { get; set; }
        
        /// <summary>
        /// <para>If true, this outcome indicates this sentence is being amended by another sentence.</para>
        /// </summary>
        [DescriptionAttribute("If true, this outcome indicates this sentence is being amended by another sentenc" +
            "e.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsAmendment")]
        public Boolean IsAmendment { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the sentence which either amends or is a resentence of this sentence.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the sentence which either amends or is a resentence of thi" +
            "s sentence.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("AdvancedToSentenceReference")]
        public String AdvancedToSentenceReference { get; set; }
        
        /// <summary>
        /// <para>This indicates the reason why the sentence was advanced. This comes from the AdvancementReasons dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This indicates the reason why the sentence was advanced. This comes from the Adva" +
            "ncementReasons dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("AdvancingReason")]
        public String AdvancingReason { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomes", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomes
    {
        
        /// <summary>
        /// <para>This is the type of charge outcome such as Acquitted, Arraigned, Dismissed, etc ... This comes from the ChargeOutcomeTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of charge outcome such as Acquitted, Arraigned, Dismissed, etc ." +
            ".. This comes from the ChargeOutcomeTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("ChargeOutcomeType")]
        public String ChargeOutcomeType { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the appearance on which this outcome takes effect.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the appearance on which this outcome takes effect.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("EffectiveAppearanceReference")]
        public String EffectiveAppearanceReference { get; set; }
        
        /// <summary>
        /// <para>This is the date the outcome took effect.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the outcome took effect.")]
        [RequiredAttribute()]
        [XmlElementAttribute("EffectiveDate", DataType="date")]
        public DateTime EffectiveDate { get; set; }
        
        /// <summary>
        /// <para>This is a summary of what is taking effect with the outcome.</para>
        /// <para>This is a string that cannot exceed 4000 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 4000.</para>
        /// </summary>
        [DescriptionAttribute("This is a summary of what is taking effect with the outcome.")]
        [MaxLengthAttribute(4000)]
        [XmlElementAttribute("OutcomeHighlight")]
        public String OutcomeHighlight { get; set; }
        
        /// <summary>
        /// <para>If true, this outcome has been deactivated by another outcome. For example, plea withdrawn deactivates pled guilty.</para>
        /// </summary>
        [DescriptionAttribute("If true, this outcome has been deactivated by another outcome. For example, plea " +
            "withdrawn deactivates pled guilty.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsDeactivated")]
        public Boolean IsDeactivated { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesACDCondition> _aCDCondition;
        
        /// <summary>
        /// <para>If the outcome is an ACD, this element contains additional details about any conditions placed on the ACD.</para>
        /// </summary>
        [DescriptionAttribute("If the outcome is an ACD, this element contains additional details about any cond" +
            "itions placed on the ACD.")]
        [XmlElementAttribute("ACDCondition")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesACDCondition> ACDCondition
        {
            get
            {
                return this._aCDCondition;
            }
            private set
            {
                this._aCDCondition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ACDCondition collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean ACDConditionSpecified
        {
            get
            {
                return (this.ACDCondition.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomes" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomes()
        {
            this._aCDCondition = new Collection<CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesACDCondition>();
        }
        
        /// <summary>
        /// <para>This is the felony offender status assigned to a convicted felon by the judge between conviction and sentencing. This status then affects the sentencing guidelines that are used by the judge. This status may only exist for conviction charge outcomes. The possible values come
        /// from the FelonyOffenderStatusTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute(@"This is the felony offender status assigned to a convicted felon by the judge between conviction and sentencing. This status then affects the sentencing guidelines that are used by the judge. This status may only exist for conviction charge outcomes. The possible values come from the FelonyOffenderStatusTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("FelonyOffenderStatusType")]
        public String FelonyOffenderStatusType { get; set; }
        
        /// <summary>
        /// <para>If there is additional information associated with this type of charge outcome, it will be contained here.</para>
        /// </summary>
        [DescriptionAttribute("If there is additional information associated with this type of charge outcome, i" +
            "t will be contained here.")]
        [XmlElementAttribute("ChargeOutcomeAdditionalInfo")]
        public CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfo ChargeOutcomeAdditionalInfo { get; set; }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each charge outcome, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same charge outcome retains the same identifier each time it appears in an extract. This identifier is of the form "ChargeOutcome-Sequence". It should be noted that: 
        ///o ChargeOutcome is literally "ChargeOutcome". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "ChargeOutcome-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each charge outcome, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same charge outcome retains the same identifier each time it appears in an extract. This identifier is of the form ""ChargeOutcome-Sequence"". It should be noted that: o ChargeOutcome is literally ""ChargeOutcome"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""ChargeOutcome-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("ChargeOutcomeID")]
        public String ChargeOutcomeID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesACDCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesACDCondition
    {
        
        /// <summary>
        /// <para>This is the type of ACD condition, which comes from the ACDConditionTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of ACD condition, which comes from the ACDConditionTypes diction" +
            "ary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("ACDConditionType")]
        public String ACDConditionType { get; set; }
        
        /// <summary>
        /// <para>if the condition has additional data associated with it, that data is found here.</para>
        /// </summary>
        [DescriptionAttribute("if the condition has additional data associated with it, that data is found here." +
            "")]
        [XmlElementAttribute("ACDConditionDetails")]
        public CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesACDConditionACDConditionDetails ACDConditionDetails { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesACDConditionACDCondit" +
        "ionDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesACDConditionACDConditionDetails
    {
        
        /// <summary>
        /// <para>If the condition is for community service, this element stores additional community service details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for community service, this element stores additional communi" +
            "ty service details.")]
        [XmlElementAttribute("CommunityServiceACDCondition")]
        public CommunityServiceCondition CommunityServiceACDCondition { get; set; }
        
        /// <summary>
        /// <para>If the condition is for restitution, this element stores additional restitution details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for restitution, this element stores additional restitution d" +
            "etails.")]
        [XmlElementAttribute("RestitutionACDCondition")]
        public Restitution RestitutionACDCondition { get; set; }
        
        /// <summary>
        /// <para>If the condition is for a treatment mandate, this element stores additional treatment mandate details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for a treatment mandate, this element stores additional treat" +
            "ment mandate details.")]
        [XmlElementAttribute("TreatmentMandateACDCondition")]
        public TreatmentMandateCondition TreatmentMandateACDCondition { get; set; }
        
        [XmlElementAttribute("WeekendWorkProgramACDCondition")]
        public WeekendWorkProgramCondition WeekendWorkProgramACDCondition { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAddition" +
        "alInfo", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfo
    {
        
        /// <summary>
        /// <para>If the charge outcome is a "consolidated into another docket", additional information is contained within.</para>
        /// </summary>
        [DescriptionAttribute("If the charge outcome is a \"consolidated into another docket\", additional informa" +
            "tion is contained within.")]
        [XmlElementAttribute("ChargeOutcomeConsolidatedInto")]
        public CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeConsolidatedInto ChargeOutcomeConsolidatedInto { get; set; }
        
        /// <summary>
        /// <para>If the charge outcome is a "Superceded By" outcome, this element contains the ID of the docket that supercedes this charge.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("If the charge outcome is a \"Superceded By\" outcome, this element contains the ID " +
            "of the docket that supercedes this charge.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("ChargeOutcomeSupercedingDocketReference")]
        public String ChargeOutcomeSupercedingDocketReference { get; set; }
        
        /// <summary>
        /// <para>If the charge outcome is "Covered By", additional information is contained within.</para>
        /// </summary>
        [DescriptionAttribute("If the charge outcome is \"Covered By\", additional information is contained within" +
            ".")]
        [XmlElementAttribute("ChargeOutcomeCoveredBy")]
        public CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeCoveredBy ChargeOutcomeCoveredBy { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAddition" +
        "alInfoChargeOutcomeConsolidatedInto", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeConsolidatedInto
    {
        
        /// <summary>
        /// <para>If the docket exists in UCMS in a context where it can be referenced, this will contain the ID of said docket. In some cases, only the docket number may be available.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("If the docket exists in UCMS in a context where it can be referenced, this will c" +
            "ontain the ID of said docket. In some cases, only the docket number may be avail" +
            "able.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("DocketReference")]
        public String DocketReference { get; set; }
        
        /// <summary>
        /// <para>If the court of the docket this charge was consolidated into is known, this will contain the court's ID. The court is not known in all cases.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("If the court of the docket this charge was consolidated into is known, this will " +
            "contain the court\'s ID. The court is not known in all cases.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("CourtReference")]
        public String CourtReference { get; set; }
        
        /// <summary>
        /// <para>If the docket number of the docket the charge was consolidated into is known, it will be contained here. The docket number is not known in all cases.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("If the docket number of the docket the charge was consolidated into is known, it " +
            "will be contained here. The docket number is not known in all cases.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("DocketNumber")]
        public String DocketNumber { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAddition" +
        "alInfoChargeOutcomeCoveredBy", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeCoveredBy
    {
        
        /// <summary>
        /// <para>If one charge covers another charge in the same docket, this element will contain additional information. This is by far the most common type of ChargeOutcomeCoveredBy.</para>
        /// </summary>
        [DescriptionAttribute("If one charge covers another charge in the same docket, this element will contain" +
            " additional information. This is by far the most common type of ChargeOutcomeCov" +
            "eredBy.")]
        [XmlElementAttribute("CoveredByCharge")]
        public CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeCoveredByCoveredByCharge CoveredByCharge { get; set; }
        
        /// <summary>
        /// <para>If a charge is covered by another docket for the same defendant in UCMS, this element will contain additional information. This is used far less often than CoveredByCharge, but happens often enough.</para>
        /// </summary>
        [DescriptionAttribute("If a charge is covered by another docket for the same defendant in UCMS, this ele" +
            "ment will contain additional information. This is used far less often than Cover" +
            "edByCharge, but happens often enough.")]
        [XmlElementAttribute("CoveredByUCMSDocket")]
        public CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeCoveredByCoveredByUCMSDocket CoveredByUCMSDocket { get; set; }
        
        /// <summary>
        /// <para>If a charge is covered by another docket for the same defendant from another system (not UCMS), this element will contain additional information. This is used far less often than both CoveredByCharge and CoveredByUCMSDocket.</para>
        /// </summary>
        [DescriptionAttribute("If a charge is covered by another docket for the same defendant from another syst" +
            "em (not UCMS), this element will contain additional information. This is used fa" +
            "r less often than both CoveredByCharge and CoveredByUCMSDocket.")]
        [XmlElementAttribute("CoveredByOtherDocket")]
        public CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeCoveredByCoveredByOtherDocket CoveredByOtherDocket { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAddition" +
        "alInfoChargeOutcomeCoveredByCoveredByCharge", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeCoveredByCoveredByCharge
    {
        
        /// <summary>
        /// <para>This is a reference to the charge that covers this charge.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the charge that covers this charge.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("CoveredByChargeReference")]
        public String CoveredByChargeReference { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAddition" +
        "alInfoChargeOutcomeCoveredByCoveredByUCMSDocket", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeCoveredByCoveredByUCMSDocket
    {
        
        /// <summary>
        /// <para>This is a reference to the court which contains the covering docket. The covering docket may or may not be in the same court as the charge being covered.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the court which contains the covering docket. The covering" +
            " docket may or may not be in the same court as the charge being covered.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("CoveredByCourtReference")]
        public String CoveredByCourtReference { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the docket which covers this charge.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the docket which covers this charge.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("CoveredByDocketReference")]
        public String CoveredByDocketReference { get; set; }
        
        /// <summary>
        /// <para>This is the docket number of the covering docket. This is useful if the recepient of the extract does not have access to the covering docket's information.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the docket number of the covering docket. This is useful if the recepient" +
            " of the extract does not have access to the covering docket\'s information.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("CoveredByDocketNumber")]
        public String CoveredByDocketNumber { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAddition" +
        "alInfoChargeOutcomeCoveredByCoveredByOtherDocket", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketChargeChargeOutcomesChargeOutcomeAdditionalInfoChargeOutcomeCoveredByCoveredByOtherDocket
    {
        
        /// <summary>
        /// <para>This is a reference to the court which contains the covering docket.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the court which contains the covering docket.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("CoveredByCourtReference")]
        public String CoveredByCourtReference { get; set; }
        
        /// <summary>
        /// <para>This is the case number of the covering case.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the case number of the covering case.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("CoveredByCaseNumber")]
        public String CoveredByCaseNumber { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketDocketDisposition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketDocketDisposition
    {
        
        /// <summary>
        /// <para>This is the date on which the docket was disposed.</para>
        /// </summary>
        [DescriptionAttribute("This is the date on which the docket was disposed.")]
        [RequiredAttribute()]
        [XmlElementAttribute("DisposedDate", DataType="date")]
        public DateTime DisposedDate { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the judge credited with disposing the docket.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the judge credited with disposing the docket.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("DisposingJudgeReference")]
        public String DisposingJudgeReference { get; set; }
        
        /// <summary>
        /// <para>This is the reason the docket was disposed, such as Pled Guilty, Dismissed, and so forth. This comes from the DocketDispositionReasons dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the reason the docket was disposed, such as Pled Guilty, Dismissed, and s" +
            "o forth. This comes from the DocketDispositionReasons dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("DocketDispositionReason")]
        public String DocketDispositionReason { get; set; }
        
        /// <summary>
        /// <para>This categorizes the reason why the docket was disposed. For example, Pled Guilty and Pled Guilty by Mail are both categorized in the "Guilty Pleas" category. This comes from the DocketDispositionCategories dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This categorizes the reason why the docket was disposed. For example, Pled Guilty" +
            " and Pled Guilty by Mail are both categorized in the \"Guilty Pleas\" category. Th" +
            "is comes from the DocketDispositionCategories dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("DocketDispositionCategory")]
        public String DocketDispositionCategory { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketWarrant", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketWarrant
    {
        
        /// <summary>
        /// <para>This is the date the warrant was issued.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the warrant was issued.")]
        [RequiredAttribute()]
        [XmlElementAttribute("DateIssued", DataType="date")]
        public DateTime DateIssued { get; set; }
        
        /// <summary>
        /// <para>This indicates the date the warrant was returned, vacated, or executed (if any of these actions occurred). A warrant may only have one of these actions.</para>
        /// </summary>
        [DescriptionAttribute("This indicates the date the warrant was returned, vacated, or executed (if any of" +
            " these actions occurred). A warrant may only have one of these actions.")]
        [XmlElementAttribute("ActionDate")]
        public CriminalDocketsDistrictCountyCourtDocketWarrantActionDate ActionDate { get; set; }
        
        /// <summary>
        /// <para>If true, this is an arrest warrant.</para>
        /// </summary>
        [DescriptionAttribute("If true, this is an arrest warrant.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsArrestWarrant")]
        public Boolean IsArrestWarrant { get; set; }
        
        /// <summary>
        /// <para>If true, this is a bench warrant.</para>
        /// </summary>
        [DescriptionAttribute("If true, this is a bench warrant.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsBenchWarrant")]
        public Boolean IsBenchWarrant { get; set; }
        
        /// <summary>
        /// <para>This indicates the reason why the warrant was given, and comes from the WarrantReason dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This indicates the reason why the warrant was given, and comes from the WarrantRe" +
            "ason dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("WarrantReason")]
        public String WarrantReason { get; set; }
        
        /// <summary>
        /// <para>This is a reference to the part to which this warrant will be returned, if any has been specified.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the part to which this warrant will be returned, if any ha" +
            "s been specified.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("ReturnPartReference")]
        public String ReturnPartReference { get; set; }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each warrant, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same warrant retains the same identifier each time it appears in an extract. This identifier is of the form "Warrant-Sequence". It should be noted that: 
        ///o Warrant is literally "Warrant". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "Warrant-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each warrant, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same warrant retains the same identifier each time it appears in an extract. This identifier is of the form ""Warrant-Sequence"". It should be noted that: o Warrant is literally ""Warrant"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""Warrant-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("WarrantID")]
        public String WarrantID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketWarrantActionDate", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketWarrantActionDate
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnedDate", DataType="date")]
        public DateTime ReturnedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnedDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnedDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> ReturnedDate
        {
            get
            {
                if (this.ReturnedDateValueSpecified)
                {
                    return this.ReturnedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnedDateValue = value.GetValueOrDefault();
                this.ReturnedDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VacatedDate", DataType="date")]
        public DateTime VacatedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VacatedDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VacatedDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> VacatedDate
        {
            get
            {
                if (this.VacatedDateValueSpecified)
                {
                    return this.VacatedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VacatedDateValue = value.GetValueOrDefault();
                this.VacatedDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExecutedDate", DataType="date")]
        public DateTime ExecutedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExecutedDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExecutedDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> ExecutedDate
        {
            get
            {
                if (this.ExecutedDateValueSpecified)
                {
                    return this.ExecutedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExecutedDateValue = value.GetValueOrDefault();
                this.ExecutedDateValueSpecified = value.HasValue;
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketOrderOfProtection", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketOrderOfProtection
    {
        
        /// <summary>
        /// <para>This is the order number for the order of protection, which is used to distinguish one order of protection from another in a court.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the order number for the order of protection, which is used to distinguis" +
            "h one order of protection from another in a court.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("OrderNumber")]
        public String OrderNumber { get; set; }
        
        /// <summary>
        /// <para>This is the date the order of protection was issued.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the order of protection was issued.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IssuedDate", DataType="date")]
        public DateTime IssuedDate { get; set; }
        
        /// <summary>
        /// <para>If the OP does not expire on warrant return, this field contains the date the OP is due to expire.</para>
        /// </summary>
        [DescriptionAttribute("If the OP does not expire on warrant return, this field contains the date the OP " +
            "is due to expire.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExpirationDate", DataType="date")]
        public DateTime ExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExpirationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>If the OP does not expire on warrant return, this field contains the date the OP is due to expire.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> ExpirationDate
        {
            get
            {
                if (this.ExpirationDateValueSpecified)
                {
                    return this.ExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpirationDateValue = value.GetValueOrDefault();
                this.ExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If true, this order of protection expires on the return of a warrant. If false, the ExpirationDate field will contain the date the OP expires.</para>
        /// </summary>
        [DescriptionAttribute("If true, this order of protection expires on the return of a warrant. If false, t" +
            "he ExpirationDate field will contain the date the OP expires.")]
        [RequiredAttribute()]
        [XmlElementAttribute("ExpiresOnWarrantReturn")]
        public Boolean ExpiresOnWarrantReturn { get; set; }
        
        /// <summary>
        /// <para>This is the date the OP was vacated. Not all OPs are vacated.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the OP was vacated. Not all OPs are vacated.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VacateDate", DataType="date")]
        public DateTime VacateDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VacateDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VacateDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the date the OP was vacated. Not all OPs are vacated.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> VacateDate
        {
            get
            {
                if (this.VacateDateValueSpecified)
                {
                    return this.VacateDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VacateDateValue = value.GetValueOrDefault();
                this.VacateDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the type of order of protection, such as Criminal Family Offense, Criminal Non-family Offense, and so on. This comes from the OrderOfProtectionFormTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of order of protection, such as Criminal Family Offense, Crimina" +
            "l Non-family Offense, and so on. This comes from the OrderOfProtectionFormTypes " +
            "dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("FormType")]
        public String FormType { get; set; }
        
        /// <summary>
        /// <para>This is the total number of parties the OP protects.</para>
        /// </summary>
        [DescriptionAttribute("This is the total number of parties the OP protects.")]
        [RequiredAttribute()]
        [XmlElementAttribute("TotalNumberOfProtectedParties")]
        public String TotalNumberOfProtectedParties { get; set; }
        
        /// <summary>
        /// <para>This indicates whether the against party (defendant) is prohibited from purchasing a firearm according to federal restrictions. Values are True, False, and Unknown, which come from the FederalGunProhibitors dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This indicates whether the against party (defendant) is prohibited from purchasin" +
            "g a firearm according to federal restrictions. Values are True, False, and Unkno" +
            "wn, which come from the FederalGunProhibitors dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("FederalGunProhibitor")]
        public String FederalGunProhibitor { get; set; }
        
        /// <summary>
        /// <para>The NY state firearm prohibitor which is calculated based on the presence of any of the Firearm terms and conditions on the Order of Protection. If true, the defendant cannot purchase a gun according to New York State.</para>
        /// </summary>
        [DescriptionAttribute("The NY state firearm prohibitor which is calculated based on the presence of any " +
            "of the Firearm terms and conditions on the Order of Protection. If true, the def" +
            "endant cannot purchase a gun according to New York State.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsStateGunProhibited")]
        public Boolean IsStateGunProhibited { get; set; }
        
        /// <summary>
        /// <para>If true, this OP is final which means it's usually issued at disposition of the docket and for a longer term. If false, this OP is temporary and is for a shorter term.</para>
        /// </summary>
        [DescriptionAttribute("If true, this OP is final which means it\'s usually issued at disposition of the d" +
            "ocket and for a longer term. If false, this OP is temporary and is for a shorter" +
            " term.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsFinal")]
        public Boolean IsFinal { get; set; }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each order of protection, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same order of protection retains the same identifier each time it appears in an extract. This identifier is of the form "OrderOfProtection-Sequence". It should be noted that: 
        ///o OrderOfProtection is literally "OrderOfProtection". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "OrderOfProtection-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each order of protection, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same order of protection retains the same identifier each time it appears in an extract. This identifier is of the form ""OrderOfProtection-Sequence"". It should be noted that: o OrderOfProtection is literally ""OrderOfProtection"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""OrderOfProtection-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("OrderOfProtectionID")]
        public String OrderOfProtectionID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBail", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBail
    {
        
        /// <summary>
        /// <para>This is the current status of bail on the docket, such as Bail Forfeited, Bail Posted, Bail Set, etc ... If the bail status is not known, then this will have a value of "Bail Status Unknown". This values comes from the BailStatuses dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the current status of bail on the docket, such as Bail Forfeited, Bail Po" +
            "sted, Bail Set, etc ... If the bail status is not known, then this will have a v" +
            "alue of \"Bail Status Unknown\". This values comes from the BailStatuses dictionar" +
            "y.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("BailStatus")]
        public String BailStatus { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivity> _bailActivity;
        
        /// <summary>
        /// <para>Bail activity can consist of many actions, such as Set, Posted, and so on. Each BailAction indicates one action that has occurred on the bail for the docket.</para>
        /// </summary>
        [DescriptionAttribute("Bail activity can consist of many actions, such as Set, Posted, and so on. Each B" +
            "ailAction indicates one action that has occurred on the bail for the docket.")]
        [RequiredAttribute()]
        [XmlElementAttribute("BailActivity")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivity> BailActivity
        {
            get
            {
                return this._bailActivity;
            }
            private set
            {
                this._bailActivity = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketBail" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketBail()
        {
            this._bailActivity = new Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivity>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBailBailActivity", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBailBailActivity
    {
        
        /// <summary>
        /// <para>This is the type of bail action that occurred, and comes form the BailActivityTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the type of bail action that occurred, and comes form the BailActivityTyp" +
            "es dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("BailActivityType")]
        public String BailActivityType { get; set; }
        
        /// <summary>
        /// <para>This is the date the bail action occurred.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the bail action occurred.")]
        [RequiredAttribute()]
        [XmlElementAttribute("BailActivityDate", DataType="date")]
        public DateTime BailActivityDate { get; set; }
        
        /// <summary>
        /// <para>This indicates, starting from 1 and incrementing from there, the order in which the bail actions occurred on this docket. Some actions may happen on the same day.</para>
        /// </summary>
        [DescriptionAttribute("This indicates, starting from 1 and incrementing from there, the order in which t" +
            "he bail actions occurred on this docket. Some actions may happen on the same day" +
            ".")]
        [RequiredAttribute()]
        [XmlElementAttribute("BailActivityOrder")]
        public String BailActivityOrder { get; set; }
        
        /// <summary>
        /// <para>Certain types of bail activity have more details associated with them, contained within.</para>
        /// </summary>
        [DescriptionAttribute("Certain types of bail activity have more details associated with them, contained " +
            "within.")]
        [XmlElementAttribute("BailActivityDetails")]
        public CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetails BailActivityDetails { get; set; }
        
        /// <summary>
        /// <para>This identifier uniquely identifies each bail activity, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same bail activity retains the same identifier each time it appears in an extract. This identifier is of the form "BailActivity-Sequence". It should be noted that: 
        ///o BailActivity is literally "BailActivity". 
        ///o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as "000000000013". An example identifier is "BailActivity-000000000013".</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute(@"This identifier uniquely identifies each bail activity, allowing a specific one to be referenced by the identifier. This identifier is permanent, which means that the same bail activity retains the same identifier each time it appears in an extract. This identifier is of the form ""BailActivity-Sequence"". It should be noted that: o BailActivity is literally ""BailActivity"". o Sequence is a 12 digit number that starts with 1 and is incremented by 1. The number is 0 padded which means that any digits that are unused are 0 digits, such as ""000000000013"". An example identifier is ""BailActivity-000000000013"".")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlAttributeAttribute("BailActivityID")]
        public String BailActivityID { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetails
    {
        
        /// <summary>
        /// <para>If the action is Bail Posted, this contains additional details.</para>
        /// </summary>
        [DescriptionAttribute("If the action is Bail Posted, this contains additional details.")]
        [XmlElementAttribute("BailPostedDetails")]
        public CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsBailPostedDetails BailPostedDetails { get; set; }
        
        /// <summary>
        /// <para>If the action is Bail Set, this contains additional details.</para>
        /// </summary>
        [DescriptionAttribute("If the action is Bail Set, this contains additional details.")]
        [XmlElementAttribute("BailSetDetails")]
        public CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsBailSetDetails BailSetDetails { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryCondition> _releasedWithNonMonetaryCondition;
        
        /// <summary>
        /// <para>If the action is "Released with Non Monetary Condition", this contains additional details.</para>
        /// </summary>
        [DescriptionAttribute("If the action is \"Released with Non Monetary Condition\", this contains additional" +
            " details.")]
        [XmlArrayAttribute("ReleasedWithNonMonetaryCondition")]
        [XmlArrayItemAttribute("NonMonetaryCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryCondition> ReleasedWithNonMonetaryCondition
        {
            get
            {
                return this._releasedWithNonMonetaryCondition;
            }
            private set
            {
                this._releasedWithNonMonetaryCondition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReleasedWithNonMonetaryCondition collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Boolean ReleasedWithNonMonetaryConditionSpecified
        {
            get
            {
                return (this.ReleasedWithNonMonetaryCondition.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetails" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetails()
        {
            this._releasedWithNonMonetaryCondition = new Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryCondition>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsBailPo" +
        "stedDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsBailPostedDetails
    {
        
        /// <summary>
        /// <para>If true, the bail was posted by the defendant.</para>
        /// </summary>
        [DescriptionAttribute("If true, the bail was posted by the defendant.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsPostedByDefendant")]
        public Boolean IsPostedByDefendant { get; set; }
        
        /// <summary>
        /// <para>If true, bail was posted at jail or the department of corrections.</para>
        /// </summary>
        [DescriptionAttribute("If true, bail was posted at jail or the department of corrections.")]
        [RequiredAttribute()]
        [XmlElementAttribute("IsPostedAtJail")]
        public Boolean IsPostedAtJail { get; set; }
        
        /// <summary>
        /// <para>This is the type of surety, which comes from the BailPostedSuretyTypes dictionary, with one of these values.
        ///
        ///Not Set - The court staff did not set the type of surety.
        ///Unknown - The court staff did not know who is responsible for the bail payments.
        ///Individual - A person who is not the defendant is responsible for bail.
        ///Corporation - A corporation is responsible for the bail.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute(@"This is the type of surety, which comes from the BailPostedSuretyTypes dictionary, with one of these values. Not Set - The court staff did not set the type of surety. Unknown - The court staff did not know who is responsible for the bail payments. Individual - A person who is not the defendant is responsible for bail. Corporation - A corporation is responsible for the bail.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("SuretyType")]
        public String SuretyType { get; set; }
        
        /// <summary>
        /// <para>If the type of surety is an individual or a corporation, this element contains the name of said individual or corporation.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("If the type of surety is an individual or a corporation, this element contains th" +
            "e name of said individual or corporation.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("SuretyName")]
        public String SuretyName { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsBailSe" +
        "tDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsBailSetDetails
    {
        
        /// <summary>
        /// <para>This is the amount bail is set to if paid with cash.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount bail is set to if paid with cash.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BailCashSetTo")]
        public Decimal BailCashSetToValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BailCashSetTo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BailCashSetToValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount bail is set to if paid with cash.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> BailCashSetTo
        {
            get
            {
                if (this.BailCashSetToValueSpecified)
                {
                    return this.BailCashSetToValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BailCashSetToValue = value.GetValueOrDefault();
                this.BailCashSetToValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the amount bail is set to if paid by credit card.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount bail is set to if paid by credit card.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BailCreditSetTo")]
        public Decimal BailCreditSetToValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BailCreditSetTo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BailCreditSetToValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount bail is set to if paid by credit card.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> BailCreditSetTo
        {
            get
            {
                if (this.BailCreditSetToValueSpecified)
                {
                    return this.BailCreditSetToValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BailCreditSetToValue = value.GetValueOrDefault();
                this.BailCreditSetToValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the amount of the Insurance Company Bail Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount of the Insurance Company Bail Bond.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceCompanyBondAmount")]
        public Decimal InsuranceCompanyBondAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceCompanyBondAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceCompanyBondAmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount of the Insurance Company Bail Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> InsuranceCompanyBondAmount
        {
            get
            {
                if (this.InsuranceCompanyBondAmountValueSpecified)
                {
                    return this.InsuranceCompanyBondAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceCompanyBondAmountValue = value.GetValueOrDefault();
                this.InsuranceCompanyBondAmountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the amount of the Partially Secured Appearance Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount of the Partially Secured Appearance Bond.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PartiallySecuredAppearanceBondAmount")]
        public Decimal PartiallySecuredAppearanceBondAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartiallySecuredAppearanceBondAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PartiallySecuredAppearanceBondAmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount of the Partially Secured Appearance Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> PartiallySecuredAppearanceBondAmount
        {
            get
            {
                if (this.PartiallySecuredAppearanceBondAmountValueSpecified)
                {
                    return this.PartiallySecuredAppearanceBondAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PartiallySecuredAppearanceBondAmountValue = value.GetValueOrDefault();
                this.PartiallySecuredAppearanceBondAmountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the amount of the Partially Secured Surety Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount of the Partially Secured Surety Bond.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PartiallySecuredSuretyBondAmount")]
        public Decimal PartiallySecuredSuretyBondAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartiallySecuredSuretyBondAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PartiallySecuredSuretyBondAmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount of the Partially Secured Surety Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> PartiallySecuredSuretyBondAmount
        {
            get
            {
                if (this.PartiallySecuredSuretyBondAmountValueSpecified)
                {
                    return this.PartiallySecuredSuretyBondAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PartiallySecuredSuretyBondAmountValue = value.GetValueOrDefault();
                this.PartiallySecuredSuretyBondAmountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the amount of the Secured Appearance Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount of the Secured Appearance Bond.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecuredAppearanceBondAmount")]
        public Decimal SecuredAppearanceBondAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecuredAppearanceBondAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecuredAppearanceBondAmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount of the Secured Appearance Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> SecuredAppearanceBondAmount
        {
            get
            {
                if (this.SecuredAppearanceBondAmountValueSpecified)
                {
                    return this.SecuredAppearanceBondAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecuredAppearanceBondAmountValue = value.GetValueOrDefault();
                this.SecuredAppearanceBondAmountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the amount of the Secured Surety Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount of the Secured Surety Bond.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecuredSuretyBondAmount")]
        public Decimal SecuredSuretyBondAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecuredSuretyBondAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecuredSuretyBondAmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount of the Secured Surety Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> SecuredSuretyBondAmount
        {
            get
            {
                if (this.SecuredSuretyBondAmountValueSpecified)
                {
                    return this.SecuredSuretyBondAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecuredSuretyBondAmountValue = value.GetValueOrDefault();
                this.SecuredSuretyBondAmountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the amount of the Unsecured Appearance Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount of the Unsecured Appearance Bond.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnsecuredAppearanceBondAmount")]
        public Decimal UnsecuredAppearanceBondAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnsecuredAppearanceBondAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnsecuredAppearanceBondAmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount of the Unsecured Appearance Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> UnsecuredAppearanceBondAmount
        {
            get
            {
                if (this.UnsecuredAppearanceBondAmountValueSpecified)
                {
                    return this.UnsecuredAppearanceBondAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnsecuredAppearanceBondAmountValue = value.GetValueOrDefault();
                this.UnsecuredAppearanceBondAmountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>This is the amount of the Unsecured Surety Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [DescriptionAttribute("This is the amount of the Unsecured Surety Bond.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnsecuredSuretyBondAmount")]
        public Decimal UnsecuredSuretyBondAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnsecuredSuretyBondAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnsecuredSuretyBondAmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount of the Unsecured Surety Bond.</para>
        /// <para>This represents a monetary amount which supports two decimal digits.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Decimal> UnsecuredSuretyBondAmount
        {
            get
            {
                if (this.UnsecuredSuretyBondAmountValueSpecified)
                {
                    return this.UnsecuredSuretyBondAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnsecuredSuretyBondAmountValue = value.GetValueOrDefault();
                this.UnsecuredSuretyBondAmountValueSpecified = value.HasValue;
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleas" +
        "edWithNonMonetaryCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryCondition
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryCondition> _nonMonetaryCondition;
        
        /// <summary>
        /// <para>There are one or more conditions associated when a defendant is released with non monetary conditions. This element contains such details.</para>
        /// </summary>
        [DescriptionAttribute("There are one or more conditions associated when a defendant is released with non" +
            " monetary conditions. This element contains such details.")]
        [RequiredAttribute()]
        [XmlElementAttribute("NonMonetaryCondition")]
        public Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryCondition> NonMonetaryCondition
        {
            get
            {
                return this._nonMonetaryCondition;
            }
            private set
            {
                this._nonMonetaryCondition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryCondition" /> class.</para>
        /// </summary>
        public CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryCondition()
        {
            this._nonMonetaryCondition = new Collection<CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryCondition>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleas" +
        "edWithNonMonetaryConditionNonMonetaryCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryCondition
    {
        
        /// <summary>
        /// <para>This is the specific type of condition associated with the bail activity, such as Travel Restrictions and Electronic Monitoring. This comes from the NonMonetaryConditionTypes dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the specific type of condition associated with the bail activity, such as" +
            " Travel Restrictions and Electronic Monitoring. This comes from the NonMonetaryC" +
            "onditionTypes dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("NonMonetaryConditionType")]
        public String NonMonetaryConditionType { get; set; }
        
        /// <summary>
        /// <para>Some non monetary conditions have additional information associated with them under this element.</para>
        /// </summary>
        [DescriptionAttribute("Some non monetary conditions have additional information associated with them und" +
            "er this element.")]
        [XmlElementAttribute("NonMonetaryConditionDetails")]
        public CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryConditionNonMonetaryConditionDetails NonMonetaryConditionDetails { get; set; }
        
        /// <summary>
        /// <para>This is a freetext field that may contain additional information about this bail condition.</para>
        /// <para>This is a string that cannot exceed 8000 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 8000.</para>
        /// </summary>
        [DescriptionAttribute("This is a freetext field that may contain additional information about this bail " +
            "condition.")]
        [MaxLengthAttribute(8000)]
        [XmlElementAttribute("AdditionalDetails")]
        public String AdditionalDetails { get; set; }
        
        /// <summary>
        /// <para>This is the agency associated with this bail condition, if any.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the agency associated with this bail condition, if any.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("Agency")]
        public String Agency { get; set; }
        
        /// <summary>
        /// <para>If the condition is eletronic monitoring, this may contain the number of days the eletronic monitoring will be applied.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is eletronic monitoring, this may contain the number of days the" +
            " eletronic monitoring will be applied.")]
        [XmlElementAttribute("ElectronicMonitoringDurationDays")]
        public String ElectronicMonitoringDurationDays { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleas" +
        "edWithNonMonetaryConditionNonMonetaryConditionNonMonetaryConditionDetails", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryConditionNonMonetaryConditionDetails
    {
        
        /// <summary>
        /// <para>If the condition is for community service, this element stores additional community service details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for community service, this element stores additional communi" +
            "ty service details.")]
        [XmlElementAttribute("CommunityServiceNonMonetaryCondition")]
        public CommunityServiceCondition CommunityServiceNonMonetaryCondition { get; set; }
        
        /// <summary>
        /// <para>If the condition is for a treatment mandate, this element stores additional treatment mandate details.</para>
        /// </summary>
        [DescriptionAttribute("If the condition is for a treatment mandate, this element stores additional treat" +
            "ment mandate details.")]
        [XmlElementAttribute("TreatmentMandateNonMonetaryCondition")]
        public TreatmentMandateCondition TreatmentMandateNonMonetaryCondition { get; set; }
        
        /// <summary>
        /// <para>If the defendant must participate in a weekend work program, details are included in this element.</para>
        /// </summary>
        [DescriptionAttribute("If the defendant must participate in a weekend work program, details are included" +
            " in this element.")]
        [XmlElementAttribute("WeekendWorkProgramNonMonetaryCondition")]
        public WeekendWorkProgramCondition WeekendWorkProgramNonMonetaryCondition { get; set; }
        
        /// <summary>
        /// <para>If there is a condition of placement by pretrial supervision in a mandatory program, the details are included in this element.</para>
        /// </summary>
        [DescriptionAttribute("If there is a condition of placement by pretrial supervision in a mandatory progr" +
            "am, the details are included in this element.")]
        [XmlElementAttribute("MandatoryProgramCondition")]
        public CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryConditionNonMonetaryConditionDetailsMandatoryProgramCondition MandatoryProgramCondition { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleas" +
        "edWithNonMonetaryConditionNonMonetaryConditionNonMonetaryConditionDetailsMandato" +
        "ryProgramCondition", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketBailBailActivityBailActivityDetailsReleasedWithNonMonetaryConditionNonMonetaryConditionNonMonetaryConditionDetailsMandatoryProgramCondition
    {
        
        /// <summary>
        /// <para>This indicates the type of program the defendant must participate in. The values coms from the TreatmentProgramType dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This indicates the type of program the defendant must participate in. The values " +
            "coms from the TreatmentProgramType dictionary.")]
        [MaxLengthAttribute(255)]
        [RequiredAttribute()]
        [XmlElementAttribute("ProgramType")]
        public String ProgramType { get; set; }
        
        /// <summary>
        /// <para>This is the length of time the defendant must participate in the program.</para>
        /// </summary>
        [DescriptionAttribute("This is the length of time the defendant must participate in the program.")]
        [XmlElementAttribute("ConditionDuration")]
        public String ConditionDuration { get; set; }
        
        /// <summary>
        /// <para>This is the unit used for the program duration, such as years, months, days, and hours. This comes from the DurationUnits dictionary.</para>
        /// <para>This is a string that cannot exceed 255 characters in
        ///                length.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [DescriptionAttribute("This is the unit used for the program duration, such as years, months, days, and " +
            "hours. This comes from the DurationUnits dictionary.")]
        [MaxLengthAttribute(255)]
        [XmlElementAttribute("ConditionDurationUnit")]
        public String ConditionDurationUnit { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketDocketOrigin", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketDocketOrigin
    {
        
        /// <summary>
        /// <para>If the originating docket comes from UCMS, this can contain a reference to the docket.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("If the originating docket comes from UCMS, this can contain a reference to the do" +
            "cket.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("OriginatingDocketReference")]
        public String OriginatingDocketReference { get; set; }
        
        /// <summary>
        /// <para>If the originating docket is not a UCMS docket, this element can contain information about its origin.</para>
        /// </summary>
        [DescriptionAttribute("If the originating docket is not a UCMS docket, this element can contain informat" +
            "ion about its origin.")]
        [XmlElementAttribute("NonUCMSOriginatingDocket")]
        public CriminalDocketsDistrictCountyCourtDocketDocketOriginNonUCMSOriginatingDocket NonUCMSOriginatingDocket { get; set; }
        
        /// <summary>
        /// <para>If true, the docket was created directly from an arrest event.</para>
        /// </summary>
        [DescriptionAttribute("If true, the docket was created directly from an arrest event.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IsOriginatingFromArrest")]
        public Boolean IsOriginatingFromArrestValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsOriginatingFromArrest property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IsOriginatingFromArrestValueSpecified { get; set; }
        
        /// <summary>
        /// <para>If true, the docket was created directly from an arrest event.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Boolean> IsOriginatingFromArrest
        {
            get
            {
                if (this.IsOriginatingFromArrestValueSpecified)
                {
                    return this.IsOriginatingFromArrestValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsOriginatingFromArrestValue = value.GetValueOrDefault();
                this.IsOriginatingFromArrestValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>If true, the court staff acknowledges that the docket has an origin, but they have no idea from whence it came.</para>
        /// </summary>
        [DescriptionAttribute("If true, the court staff acknowledges that the docket has an origin, but they hav" +
            "e no idea from whence it came.")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IsUnknownSource")]
        public Boolean IsUnknownSourceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsUnknownSource property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IsUnknownSourceValueSpecified { get; set; }
        
        /// <summary>
        /// <para>If true, the court staff acknowledges that the docket has an origin, but they have no idea from whence it came.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public Nullable<Boolean> IsUnknownSource
        {
            get
            {
                if (this.IsUnknownSourceValueSpecified)
                {
                    return this.IsUnknownSourceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsUnknownSourceValue = value.GetValueOrDefault();
                this.IsUnknownSourceValueSpecified = value.HasValue;
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDocketDocketOriginNonUCMSOriginatingDocket", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDocketDocketOriginNonUCMSOriginatingDocket
    {
        
        /// <summary>
        /// <para>This is a reference to the court from whence the docket came.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the court from whence the docket came.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("OriginatingCourtReference")]
        public String OriginatingCourtReference { get; set; }
        
        /// <summary>
        /// <para>This is the originating docket number.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is the originating docket number.")]
        [MaxLengthAttribute(32)]
        [XmlElementAttribute("OriginatingDocketNumber")]
        public String OriginatingDocketNumber { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDeletedDocket", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDeletedDocket
    {
        
        /// <summary>
        /// <para>This is a reference to the docket that was deleted.</para>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [DescriptionAttribute("This is a reference to the docket that was deleted.")]
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("DeletedDocketID")]
        public String DeletedDocketID { get; set; }
        
        /// <summary>
        /// <para>This is the date the docket was found to be deleted.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the docket was found to be deleted.")]
        [RequiredAttribute()]
        [XmlElementAttribute("DeletedDate", DataType="date")]
        public DateTime DeletedDate { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.633.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CriminalDocketsDistrictCountyCourtDeletedWarrant", Namespace="http://www.nycourts.gov/xml/ucms/criminaldockets", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CriminalDocketsDistrictCountyCourtDeletedWarrant
    {
        
        /// <summary>
        /// <para>This is a string that cannot exceed 32 characters in length.</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [MaxLengthAttribute(32)]
        [RequiredAttribute()]
        [XmlElementAttribute("DeletedWarrantReference")]
        public String DeletedWarrantReference { get; set; }
        
        /// <summary>
        /// <para>This is the date the warrant was found to be deleted.</para>
        /// </summary>
        [DescriptionAttribute("This is the date the warrant was found to be deleted.")]
        [RequiredAttribute()]
        [XmlElementAttribute("DeletedDate", DataType="date")]
        public DateTime DeletedDate { get; set; }
    }
}
